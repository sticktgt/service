files:
  - path: Chart.yaml
    template: true
    content: |
      apiVersion: v2
      name: {{ .Chart.Name }}
      version: {{ .Chart.Version }}
      description: {{ .Chart.Description }}
      type: application

  - path: values.yaml
    template: true
    content: |
      ApiVersion: {{ .ApiVersion }}
      Environment: {{ .Environment }}
      Chart:
        Name: {{ .Chart.Name }}
        Version: {{ .Chart.Version }}
        Description: {{ .Chart.Description }}
      DeploymentName: {{ .DeploymentName }}
      Namespace: {{ .Namespace }}
      Metadata:
        Labels:
          app.kubernetes.io/managed-by: Helm
        Annotations: {}
      Predictors:
      {{- range .Predictors }}
        - Name: {{ .Name }}
          Graph:
            Name: {{ .Graph.Name }}
            Type: {{ .Graph.Type }}
            {{- if .Graph.Implementation }}
            Implementation: {{ .Graph.Implementation }}
            {{- end }}
            {{- if .Graph.EndpointType }}
            EndpointType: {{ .Graph.EndpointType }}
            {{- end }}
            {{- if .Graph.EnvSecretRefName }}
            EnvSecretRefName: {{ .Graph.EnvSecretRefName }}
            {{- end }}
            {{- if .Graph.Logger }}
            Logger:
              Mode: {{ .Graph.Logger.Mode }}
            {{- end }}
            {{- if .Graph.Parameters }}
            Parameters:
              {{- range .Graph.Parameters }}
              - Name: {{ .Name }}
                Type: {{ .Type }}
                Value: {{ .Value }}
              {{- end }}
            {{- end }}
            {{- if .Graph.Children }}
            Children:
              {{- range .Graph.Children }}
              - Name: {{ .Name }}
                Type: {{ .Type }}
                {{- if .Implementation }}
                Implementation: {{ .Implementation }}
                {{- end }}
                {{- if .ModelUri }}
                ModelUri: {{ .ModelUri }}
                {{- end }}
                {{- if .EnvSecretRefName }}
                EnvSecretRefName: {{ .EnvSecretRefName }}
                {{- end }}
                {{- if .Logger }}
                Logger:
                  Mode: {{ .Logger.Mode }}
                {{- end }}
                {{- if .Parameters }}
                Parameters:
                  {{- range .Parameters }}
                  - Name: {{ .Name }}
                    Type: {{ .Type }}
                    Value: {{ .Value }}
                  {{- end }}
                {{- end }}
                Children: []
              {{- end }}
            {{- else }}
            Children: []
            {{- end }}
      {{- end }}

  - path: values-ENV.yaml
    template: true
    content: |
      Predictors:
      {{- range .Predictors }}
        - Name: {{ .Name }}
          Replicas: {{ .Replicas }}
          Traffic: {{ .Traffic }}
          SvcOrchEnv:
          {{- range .SvcOrchEnv }}
            - Name: {{ .Name }}
              {{- if .Value }}
              Value: {{ .Value }}
              {{- else if .ValueFrom }}
              ValueFrom:
                SecretKeyRef:
                  Name: {{ .ValueFrom.SecretKeyRef.Name }}
                  Key: {{ .ValueFrom.SecretKeyRef.Key }}
              {{- end }}
          {{- end }}
          Graph:
            Name: {{ .Graph.Name }}
            Type: {{ .Graph.Type }}
            {{- if .Graph.Implementation }}
            Implementation: {{ .Graph.Implementation }}
            {{- end }}
            {{- if .Graph.EndpointType }}
            EndpointType: {{ .Graph.EndpointType }}
            {{- end }}
            {{- if .Graph.EnvSecretRefName }}
            EnvSecretRefName: {{ .Graph.EnvSecretRefName }}
            {{- end }}
            {{- if .Graph.Logger }}
            Logger:
              Mode: {{ .Graph.Logger.Mode }}
            {{- end }}
            {{- if .Graph.Parameters }}
            Parameters:
              {{- range .Graph.Parameters }}
              - Name: {{ .Name }}
                Type: {{ .Type }}
                Value: {{ .Value }}
              {{- end }}
            {{- end }}
            {{- if .Graph.Children }}
            Children:
              {{- range .Graph.Children }}
              - Name: {{ .Name }}
                Type: {{ .Type }}
                {{- if .Implementation }}
                Implementation: {{ .Implementation }}
                {{- end }}
                {{- if .ModelUri }}
                ModelUri: {{ .ModelUri }}
                {{- end }}
                {{- if .EnvSecretRefName }}
                EnvSecretRefName: {{ .EnvSecretRefName }}
                {{- end }}
                {{- if .Logger }}
                Logger:
                  Mode: {{ .Logger.Mode }}
                {{- end }}
                {{- if .Parameters }}
                Parameters:
                  {{- range .Parameters }}
                  - Name: {{ .Name }}
                    Type: {{ .Type }}
                    Value: {{ .Value }}
                  {{- end }}
                {{- end }}
                Children: []
              {{- end }}
            {{- end }}
          ComponentSpec:
            ServiceAccountName: {{ .ComponentSpec.ServiceAccountName }}
            TerminationGracePeriodSeconds: {{ .ComponentSpec.TerminationGracePeriodSeconds }}
            {{- if .ComponentSpec.Volumes }}
            Volumes:
              {{- range .ComponentSpec.Volumes }}
              - Name: {{ .Name }}
                {{- if .EmptyDir }}
                EmptyDir: {}
                {{- end }}
                {{- if .Secret }}
                Secret:
                  SecretName: {{ .Secret.SecretName }}
                {{- end }}
              {{- end }}
            {{- end }}
            Containers:
              {{- range .ComponentSpec.Containers }}
              - Name: {{ .Name }}
                {{- if .Image }}
                Image: {{ .Image }}
                {{- end }}
                {{- if .ImagePullPolicy }}
                ImagePullPolicy: {{ .ImagePullPolicy }}
                {{- end }}
                {{- if .Env }}
                Env:
                  {{- range .Env }}
                  - Name: {{ .Name }}
                    {{- if .Value }}
                    Value: {{ .Value }}
                    {{- else if .ValueFrom }}
                    ValueFrom:
                      SecretKeyRef:
                        Name: {{ .ValueFrom.SecretKeyRef.Name }}
                        Key: {{ .ValueFrom.SecretKeyRef.Key }}
                    {{- end }}
                  {{- end }}
                {{- end }}
                {{- if .Resources }}
                Resources:
                  Requests:
                    {{- range $k, $v := .Resources.Requests }}
                    {{ $k }}: {{ $v }}
                    {{- end }}
                  Limits:
                    {{- range $k, $v := .Resources.Limits }}
                    {{ $k }}: {{ $v }}
                    {{- end }}
                {{- end }}
                {{- if .Liveness }}
                Liveness:
                  Path: {{ .Liveness.Path }}
                  Port: {{ .Liveness.Port }}
                  InitialDelaySeconds: {{ .Liveness.InitialDelaySeconds }}
                  PeriodSeconds: {{ .Liveness.PeriodSeconds }}
                  FailureThreshold: {{ .Liveness.FailureThreshold }}
                  SuccessThreshold: {{ .Liveness.SuccessThreshold }}
                {{- end }}
                {{- if .Readiness }}
                Readiness:
                  Path: {{ .Readiness.Path }}
                  Port: {{ .Readiness.Port }}
                  InitialDelaySeconds: {{ .Readiness.InitialDelaySeconds }}
                  PeriodSeconds: {{ .Readiness.PeriodSeconds }}
                  FailureThreshold: {{ .Readiness.FailureThreshold }}
                  SuccessThreshold: {{ .Readiness.SuccessThreshold }}
                {{- end }}
                {{- if .VolumeMounts }}
                VolumeMounts:
                  {{- range .VolumeMounts }}
                  - Name: {{ .Name }}
                    MountPath: {{ .MountPath }}
                    {{- if .ReadOnly }}
                    ReadOnly: {{ .ReadOnly }}
                    {{- end }}
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- if .ComponentSpec.InitContainers }}  
            InitContainers:
              {{- range .ComponentSpec.InitContainers }}
              - Name: {{ .Name }}
                Image: {{ .Image }}
                ImagePullPolicy: {{ .ImagePullPolicy }}
                Args:
                  {{- range .Args }}
                  - {{ . }}
                  {{- end }}
                VolumeMounts:
                  {{- range .VolumeMounts }}
                  - Name: {{ .Name }}
                    MountPath: {{ .MountPath }}
                  {{- end }}
                {{- if .EnvFrom }}
                EnvFrom:
                  {{- range .EnvFrom }}
                    {{- if .SecretRef }}
                    - SecretRef:
                        Name: {{ .SecretRef.Name }}
                    {{- end }}
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- end }}  
      {{- end }}

  - path: templates/seldon-deployment.yaml
    template: false
    content: |
      apiVersion: {{ .Values.ApiVersion }}
      kind: SeldonDeployment
      metadata:
        name: {{ .Values.DeploymentName }}
        namespace: {{ .Values.Namespace }}
        {{- if .Values.Metadata.Labels }}
        labels:
        {{- range $k, $v := .Values.Metadata.Labels }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- if .Values.Metadata.Annotations }}
        annotations:
        {{- range $k, $v := .Values.Metadata.Annotations }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
      spec:
        name: {{ .Values.DeploymentName }}
        predictors:
        {{- range .Values.Predictors }}
          - name: {{ .Name }}
            replicas: {{ .Replicas }}
            traffic: {{ .Traffic }}
            {{- if .SvcOrchEnv }}
            svcOrchSpec:
              env:
              {{- range .SvcOrchEnv }}
                - name: {{ .Name }}
                  {{- if .Value }}
                  value: {{ .Value }}
                  {{- else if .ValueFrom }}
                  valueFrom:
                    secretKeyRef:
                      name: {{ .ValueFrom.SecretKeyRef.Name }}
                      key: {{ .ValueFrom.SecretKeyRef.Key }}
                  {{- end }}
              {{- end }}
            {{- end }}
            graph:
              name: {{ .Graph.Name }}
              type: {{ .Graph.Type }}
              {{- if .Graph.Implementation }}
              implementation: {{ .Graph.Implementation }}
              {{- end }}
              {{- if .Graph.ModelUri }}
              modelUri: {{ .Graph.ModelUri }}
              {{- end }}
              {{- if .Graph.EndpointType }}
              endpoint:
                type: {{ .Graph.EndpointType }}
              {{- end }}
              {{- if .Graph.EnvSecretRefName }}
              envSecretRefName: {{ .Graph.EnvSecretRefName }}
              {{- end }}
              {{- if .Graph.Logger }}
              logger:
                mode: {{ .Graph.Logger.Mode }}
              {{- end }}
              {{- if .Graph.Parameters }}
              parameters:
              {{- range .Graph.Parameters }}
                - name: {{ .Name }}
                  type: {{ .Type }}
                  value: {{ .Value }}
              {{- end }}
              {{- end }}
              {{- if .Graph.Children }}
              children:
              {{- range .Graph.Children }}
                - name: {{ .Name }}
                  type: {{ .Type }}
                  {{- if .Implementation }}
                  implementation: {{ .Implementation }}
                  {{- end }}
                  {{- if .ModelUri }}
                  modelUri: {{ .ModelUri }}
                  {{- end }}
                  {{- if .Logger }}
                  logger:
                    mode: {{ .Logger.Mode }}
                  {{- end }}
                  {{- if .Parameters }}
                  parameters:
                  {{- range .Parameters }}
                    - name: {{ .Name }}
                      type: {{ .Type }}
                      value: {{ .Value }}
                  {{- end }}
                  {{- end }}
                  children: []
              {{- end }}
              {{- end }}
            componentSpecs:
              - spec:
                  {{- if .ComponentSpec.ServiceAccountName }}
                  serviceAccountName: {{ .ComponentSpec.ServiceAccountName }}
                  {{- end }}
                  {{- if .ComponentSpec.TerminationGracePeriodSeconds }}
                  terminationGracePeriodSeconds: {{ .ComponentSpec.TerminationGracePeriodSeconds }}
                  {{- end }}
                  containers:
                  {{- range .ComponentSpec.Containers }}
                    - name: {{ .Name }}
                      {{- if .Image }}
                      image: {{ .Image }}
                      {{- end }}
                      {{- if .ImagePullPolicy }}
                      imagePullPolicy: {{ .ImagePullPolicy }}
                      {{- end }}
                      {{- if .Env }}
                      env:
                        {{- range .Env }}
                        - name: {{ .Name }}
                          {{- if .Value }}
                          value: {{ .Value }}
                          {{- else if .ValueFrom }}
                          valueFrom:
                            secretKeyRef:
                              name: {{ .ValueFrom.SecretKeyRef.Name }}
                              key: {{ .ValueFrom.SecretKeyRef.Key }}
                          {{- end }}
                        {{- end }}
                      {{- end }}
                      {{- if .VolumeMounts }}
                      volumeMounts:
                        {{- range .VolumeMounts }}
                        - name: {{ .Name }}
                          mountPath: {{ .MountPath }}
                          {{- if .ReadOnly }}
                          readOnly: {{ .ReadOnly }}
                          {{- end }}
                        {{- end }}
                      {{- end }}
                      {{- if .Resources }}
                      resources:
                        {{- if .Resources.Requests }}
                        requests:
                          {{- range $k, $v := .Resources.Requests }}
                          {{ $k }}: {{ $v }}
                          {{- end }}
                        {{- end }}
                        {{- if .Resources.Limits }}
                        limits:
                          {{- range $k, $v := .Resources.Limits }}
                          {{ $k }}: {{ $v }}
                          {{- end }}
                        {{- end }}
                      {{- end }}
                      {{- if .Liveness }}
                      livenessProbe:
                        httpGet:
                          path: {{ .Liveness.Path }}
                          port: {{ .Liveness.Port }}
                          scheme: HTTP
                        initialDelaySeconds: {{ .Liveness.InitialDelaySeconds }}
                        periodSeconds: {{ .Liveness.PeriodSeconds }}
                        failureThreshold: {{ .Liveness.FailureThreshold }}
                        successThreshold: {{ .Liveness.SuccessThreshold }}
                      {{- end }}
                      {{- if .Readiness }}
                      readinessProbe:
                        httpGet:
                          path: {{ .Readiness.Path }}
                          port: {{ .Readiness.Port }}
                          scheme: HTTP
                        initialDelaySeconds: {{ .Readiness.InitialDelaySeconds }}
                        periodSeconds: {{ .Readiness.PeriodSeconds }}
                        failureThreshold: {{ .Readiness.FailureThreshold }}
                        successThreshold: {{ .Readiness.SuccessThreshold }}
                      {{- end }}
                  {{- end }}
                  {{- if .ComponentSpec.InitContainers }}
                  initContainers:
                    {{- range .ComponentSpec.InitContainers }}
                    - name: {{ .Name }}
                      image: {{ .Image }}
                      imagePullPolicy: {{ .ImagePullPolicy }}
                      args:
                        {{- range .Args }}
                        - {{ . }}
                        {{- end }}
                      volumeMounts:
                        {{- range .VolumeMounts }}
                        - name: {{ .Name }}
                          mountPath: {{ .MountPath }}
                        {{- end }}
                      {{- if .EnvFrom }}
                      envFrom:
                        {{- range .EnvFrom }}
                          {{- if .SecretRef }}
                        - secretRef:
                            name: {{ .SecretRef.Name }}
                          {{- end }}
                        {{- end }}
                      {{- end }}
                    {{- end }}
                  {{- end }}
                  {{- if .ComponentSpec.Volumes }}
                  volumes:
                    {{- range .ComponentSpec.Volumes }}
                    - name: {{ .Name }}
                      {{- if .EmptyDir }}
                      emptyDir: {}
                      {{- end }}
                      {{- if .Secret }}
                      secret:
                        secretName: {{ .Secret.SecretName }}
                      {{- end }}
                    {{- end }}
                  {{- end }}
        {{- end }}


  - path: .helmignore
    template: false
    content: |
      *.tgz
      .DS_Store
      .idea/
      *.swp
      __pycache__/
      .ipynb_checkpoints/

valuesSchema:
  Environment:
    type: string
    description: Target environment such as TEST, STAGING, or PROD
    required: true
  ApiVersion:
    type: string
    description: Kubernetes API version for SeldonDeployment resource
    required: true
  Chart.Name:
    type: string
    description: Name of the Helm chart
    required: true
  Chart.Version:
    type: string
    description: Version of the Helm chart
    required: true
  Chart.Description:
    type: string
    description: Short description of the chart's purpose
    required: true
  DeploymentName:
    type: string
    description: Name of the SeldonDeployment resource
    required: true
  Namespace:
    type: string
    description: Kubernetes namespace to deploy the resources in
    required: true
  Metadata.Labels:
    type: object
    description: Key-value pairs used to categorize and select Kubernetes objects
    required: false
  Metadata.Annotations:
    type: object
    description: Additional metadata for tooling, policies, and configuration
    required: false
  Predictors[].Name:
    type: string
    description: Unique name of the predictor
    required: true
  Predictors[].Replicas:
    type: integer
    description: Number of model replicas to deploy
    required: true
  Predictors[].Traffic:
    type: integer
    description: Percentage of traffic assigned to this predictor
    required: false
  Predictors[].SvcOrchEnv:
    type: array
    description: Environment variables for the orchestrator container
    required: false
  Predictors[].SvcOrchEnv[].Name:
    type: string
    description: Name of environment variable for orchestrator
    required: true
  Predictors[].SvcOrchEnv[].Value:
    type: string
    description: Value of environment variable for orchestrator
    required: false
  Predictors[].SvcOrchEnv[].ValueFrom.SecretKeyRef.Name:
    type: string
    description: Name of the Kubernetes secret to use in env variable
    required: false
  Predictors[].SvcOrchEnv[].ValueFrom.SecretKeyRef.Key:
    type: string
    description: Key in the Kubernetes secret to use in env variable
    required: false
  Predictors[].Graph.Name:
    type: string
    description: Name of the root node in the prediction graph
    required: true
  Predictors[].Graph.Type:
    type: string
    description: Type of the graph node (MODEL, ROUTER, TRANSFORMER)
    required: false
  Predictors[].Graph.Implementation:
    type: string
    description: Implementation of the model server (e.g. SKLEARN_SERVER)
    required: false
  Predictors[].Graph.ModelUri:
    type: string
    description: URI to the stored model (S3, GCS, local, etc.)
    required: false
  Predictors[].Graph.EndpointType:
    type: string
    description: Type of endpoint exposed by the graph (REST or GRPC)
    required: false
  Predictors[].Graph.EnvSecretRefName:
    type: string
    description: Name of secret to pull environment credentials from
    required: false
  Predictors[].Graph.Logger.Mode:
    type: string
    description: Logging mode (all, request, response)
    required: false
  Predictors[].Graph.Parameters[].Name:
    type: string
    description: Name of a parameter used in the node
    required: true
  Predictors[].Graph.Parameters[].Type:
    type: string
    description: Data type of the parameter (STRING, INT, FLOAT)
    required: true
  Predictors[].Graph.Parameters[].Value:
    type: string
    description: Value of the parameter
    required: true
  Predictors[].Graph.Children:
    type: array
    description: Child nodes in the prediction graph
    required: false
  Predictors[].ComponentSpec.ServiceAccountName:
    type: string
    description: Service account used by pods for access control
    required: false
  Predictors[].ComponentSpec.TerminationGracePeriodSeconds:
    type: integer
    description: Time (in seconds) for graceful shutdown
    required: false
  Predictors[].ComponentSpec.Containers[].Name:
    type: string
    description: Name of the container in the pod
    required: true
  Predictors[].ComponentSpec.Containers[].Image:
    type: string
    description: Docker image to use in the container
    required: true
  Predictors[].ComponentSpec.Containers[].ImagePullPolicy:
    type: string
    description: Image pull policy (Always, IfNotPresent, Never)
    required: false
  Predictors[].ComponentSpec.Containers[].Env[].Name:
    type: string
    description: Name of environment variable
    required: true
  Predictors[].ComponentSpec.Containers[].Env[].Value:
    type: string
    description: Value of environment variable
    required: false
  Predictors[].ComponentSpec.Containers[].Env[].ValueFrom.SecretKeyRef.Name:
    type: string
    description: Name of the Kubernetes secret to reference
    required: false
  Predictors[].ComponentSpec.Containers[].Env[].ValueFrom.SecretKeyRef.Key:
    type: string
    description: Key inside the referenced secret
    required: false
  Predictors[].ComponentSpec.Containers[].VolumeMounts[].Name:
    type: string
    description: Name of the volume to mount
    required: true
  Predictors[].ComponentSpec.Containers[].VolumeMounts[].MountPath:
    type: string
    description: Path in container where volume will be mounted
    required: true
  Predictors[].ComponentSpec.Containers[].VolumeMounts[].ReadOnly:
    type: boolean
    description: Whether the volume mount should be read-only
    required: false
  Predictors[].ComponentSpec.Containers[].Resources.Requests:
    type: object
    description: Minimum amount of compute resources required
    required: false
  Predictors[].ComponentSpec.Containers[].Resources.Limits:
    type: object
    description: Maximum amount of compute resources allowed
    required: false
  Predictors[].ComponentSpec.Containers[].Liveness:
    type: object
    description: Liveness probe configuration for container
    required: false
  Predictors[].ComponentSpec.Containers[].Readiness:
    type: object
    description: Readiness probe configuration for container
    required: false
  Predictors[].ComponentSpec.Volumes[].Name:
    type: string
    description: Name of the volume
    required: true
  Predictors[].ComponentSpec.Volumes[].Secret.SecretName:
    type: string
    description: Kubernetes secret name to mount as volume
    required: false
  Predictors[].ComponentSpec.Volumes[].EmptyDir:
    type: object
    description: EmptyDir volume source for ephemeral storage
    required: false
  Predictors[].ComponentSpec.InitContainers[].Name:
    type: string
    description: Name of the init container
    required: true
  Predictors[].ComponentSpec.InitContainers[].Image:
    type: string
    description: Image used for the init container
    required: true
  Predictors[].ComponentSpec.InitContainers[].ImagePullPolicy:
    type: string
    description: Policy for pulling init container image
    required: false
  Predictors[].ComponentSpec.InitContainers[].Args:
    type: array
    description: Arguments passed to init container on start
    required: false
  Predictors[].ComponentSpec.InitContainers[].VolumeMounts[].Name:
    type: string
    description: Volume name to mount into init container
    required: true
  Predictors[].ComponentSpec.InitContainers[].VolumeMounts[].MountPath:
    type: string
    description: Path inside init container to mount the volume
    required: true
  Predictors[].ComponentSpec.InitContainers[].VolumeMounts[].ReadOnly:
    type: boolean
    description: Whether the mount is read-only
    required: false
  Predictors[].ComponentSpec.InitContainers[].EnvFrom[].SecretRef.Name:
    type: string
    description: Secret name to import env vars into init container
    required: false
