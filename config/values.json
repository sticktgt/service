{
  "ApiVersion": "machinelearning.seldon.io/v1",
  "Environment": "TEST",
  "Protocol": "seldon",
  "Transport": "rest",
  "Chart": {
    "Name": "example-model",
    "Version": "0.1.0",
    "Description": "An example Seldon model with advanced features"
  },
  "DeploymentName": "example-deployment",
  "Namespace": "default",
  "Metadata": {
    "Labels": {
      "app.kubernetes.io/managed-by": "Helm"
    },
    "Annotations": {}
  },
  "Predictors": [
    {
      "Name": "example",
      "Replicas": 1,
      "Traffic": 100,
      "Annotations": {
        "seldon.io/no-engine": "true"
      },
      "SvcOrchSpec": {
        "Resources": {
          "requests": {
            "cpu": "0.1",
            "memory": "256Mi"
          },
          "limits": {
            "cpu": "0.5",
            "memory": "512Mi"
          }
        },
        "Env": [
          {
            "Name": "LOG_LEVEL",
            "Value": "DEBUG"
          },
          {
            "Name": "JAEGER_AGENT_HOST",
            "Value": "jaeger-agent"
          }
        ]
      },
      "Graph": {
        "Name": "router",
        "Type": "ROUTER",
        "Implementation": "",
        "ModelUri": "",
        "EnvSecretRefName": "my-secret",
        "Endpoint": {
          "Type": "REST"
        },
        "Logger": {
          "Mode": "all",
          "URL": "http://logger.seldon"
        },
        "Parameters": [
          {
            "Name": "param1",
            "Type": "STRING",
            "Value": "value1"
          }
        ],
        "Children": [
          {
            "Name": "model-a",
            "Type": "MODEL",
            "Implementation": "SKLEARN_SERVER",
            "ModelUri": "gs://seldon-models/sklearn/iris",
            "Parameters": [],
            "Children": []
          },
          {
            "Name": "model-b",
            "Type": "MODEL",
            "Implementation": "SKLEARN_SERVER",
            "ModelUri": "gs://seldon-models/sklearn/wine",
            "Parameters": [],
            "Children": []
          }
        ]
      },
      "ComponentSpec": {
        "ServiceAccountName": "default",
        "TerminationGracePeriodSeconds": 20,
        "Containers": [
          {
            "Name": "example-container",
            "Image": "seldonio/mock_classifier:1.18.0",
            "ImagePullPolicy": "IfNotPresent",
            "Env": [
              {
                "Name": "MODEL_PARAM",
                "Value": "xyz"
              },
              {
                "Name": "SECRET_ENV",
                "ValueFrom": {
                  "SecretKeyRef": {
                    "Name": "my-secret",
                    "Key": "key1"
                  }
                }
              }
            ],
            "VolumeMounts": [
              {
                "Name": "data-volume",
                "MountPath": "/mnt/data",
                "ReadOnly": true
              }
            ],
            "Resources": {
              "Requests": {
                "cpu": "0.1",
                "memory": "128Mi"
              },
              "Limits": {
                "cpu": "0.5",
                "memory": "256Mi"
              }
            },
            "Liveness": {
              "Path": "/health/live",
              "Port": 8080,
              "InitialDelaySeconds": 10,
              "PeriodSeconds": 5,
              "FailureThreshold": 3,
              "SuccessThreshold": 1
            },
            "Readiness": {
              "Path": "/health/ready",
              "Port": 8080,
              "InitialDelaySeconds": 10,
              "PeriodSeconds": 5,
              "FailureThreshold": 3,
              "SuccessThreshold": 1
            }
          }
        ],
        "InitContainers": [
          {
            "Name": "init-example",
            "Image": "busybox",
            "ImagePullPolicy": "IfNotPresent",
            "Args": ["echo", "init"],
            "VolumeMounts": [
              {
                "Name": "data-volume",
                "MountPath": "/mnt/data"
              }
            ],
            "EnvFrom": [
              {
                "SecretRef": {
                  "Name": "init-secret"
                }
              }
            ]
          }
        ],
        "Volumes": [
          {
            "Name": "data-volume",
            "EmptyDir": {}
          },
          {
            "Name": "creds-volume",
            "Secret": {
              "SecretName": "my-secret"
            }
          }
        ]
      }
    }
  ]
}
