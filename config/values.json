{
  "apiVersion": "machinelearning.seldon.io/v1alpha2",
  "chart": {
    "name": "test-model",
    "version": "0.1.0",
    "description": "Test Seldon deployment chart"
  },
  "deploymentName": "jokes-openinference",
  "namespace": "app-llm",
  "protocol": "v2",
  "metadata": {
    "labels": {
      "components": "seldon-core",
      "entity": "online-model"
    },
    "annotations": {}
  },
  "predictors": [
    {
      "name": "jokes1test",
      "replicas": 1,
      "componentSpec": {
        "serviceAccountName": "default-editor",
        "terminationGracePeriodSeconds": 0,
        "containers": [
          {
            "name": "jokes-openinference",
            "env": [
              {
                "name": "GUNICORN_WORKERS",
                "value": "2"
              },
              {
                "name": "GUNICORN_THREADS",
                "value": "2"
              }
            ],
            "liveness": {
              "path": "/health/ping",
              "port": "http",
              "scheme": "HTTP",
              "initialDelaySeconds": 80,
              "periodSeconds": 5,
              "failureThreshold": 200,
              "successThreshold": 1
            },
            "readiness": {
              "path": "/health/ping",
              "port": "http",
              "scheme": "HTTP",
              "initialDelaySeconds": 80,
              "periodSeconds": 5,
              "failureThreshold": 200,
              "successThreshold": 1
            },
            "resources": {
              "limits": {
                "cpu": "2.0",
                "memory": "2.0Gi"
              },
              "requests": {
                "cpu": "2.0",
                "memory": "2.0Gi"
              }
            }
          }
        ]
      },
      "graph": {
        "name": "jokes-openinference",
        "implementation": "MLFLOW_SERVER",
        "modelUri": "s3://app-llm/4/18e6254104ab476eb019bebd0ff2b65d/artifacts/model",
        "envSecretRefName": "seldon-secret",
        "children": []
      }
    }
  ]
}