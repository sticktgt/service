chart:
  name: seldon-core-v2
  version: 1.0.0
  description: Seldon Core V2 Chart

files:
  - path: Chart.yaml
    template: true
    content: |
      apiVersion: v2
      name: {{ .Values.chart.name }}
      version: {{ .Values.chart.version }}
      description: {{ .Values.chart.description }}
      type: application
      app.dognauts:
        subjectArea: {{ .Values.subjectArea }}
        sourceMetafileRepo: {{ .Values.sourceMetafileRepo }}
        sourceMetafileBranch: {{ .Values.sourceMetafileBranch }}
        sourceMetafileName: {{ .Values.sourceMetafileName }}
      annotations:
        app.dognauts/platform-generated: true
        app.dognauts/subjectArea: {{ .Values.subjectArea }}

  - path: values.yaml
    template: true
    content: |
      {{- define "l_probe" }}
                {{- if .exec }}
                exec:
                  command:
                    {{- range .exec.command }}
                    - {{ . }}
                    {{- end }}
                {{- end }}
                {{- if .httpGet }}
                httpGet:
                  {{- if .httpGet.path }}
                  path: {{ .httpGet.path }}
                  {{- end }}
                  {{- if .httpGet.port }}
                  port: {{ .httpGet.port }}
                  {{- end }}
                  {{- if .httpGet.scheme }}
                  scheme: {{ .httpGet.scheme }}
                  {{- end }}
                  {{- if .httpGet.host }}
                  host: {{ .httpGet.host }}
                  {{- end }}
                  {{- if .httpGet.httpHeaders }}
                  httpHeaders:
                    {{- range .httpGet.httpHeaders }}
                    - name: {{ .name }}
                      value: {{ .value }}
                    {{- end }}
                  {{- end }}
                {{- end }}
                {{- if .tcpSocket }}
                tcpSocket:
                  port: {{ .tcpSocket.port }}
                  {{- if .tcpSocket.host }}
                  host: {{ .tcpSocket.host }}
                  {{- end }}
                {{- end }}
                {{- if .grpc }}
                grpc:
                  port: {{ .grpc.port }}
                  {{- if .grpc.service }}
                  service: {{ .grpc.service }}
                  {{- end }}
                {{- end }}
                {{- if .initialDelaySeconds }}
                initialDelaySeconds: {{ .initialDelaySeconds }}
                {{- end }}
                {{- if .timeoutSeconds }}
                timeoutSeconds: {{ .timeoutSeconds }}
                {{- end }}
                {{- if .periodSeconds }}
                periodSeconds: {{ .periodSeconds }}
                {{- end }}
                {{- if .successThreshold }}
                successThreshold: {{ .successThreshold }}
                {{- end }}
                {{- if .failureThreshold }}
                failureThreshold: {{ .failureThreshold }}
                {{- end }}
      {{- end }}
      {{- define "l_container" -}}
              name: {{ .name }}
              {{- if .image }}
              image: {{ .image }}
              {{- end }}
              {{- if .command }}
              command:
                {{- range .command }}
                - {{ . }}
                {{- end }}
              {{- end }}
              {{- if .args }}
              args:
                {{- range .args }}
                - {{ . }}
                {{- end }}
              {{- end }}
              {{- if .workingDir }}
              workingDir: {{ .workingDir }}
              {{- end }}
              {{- if .ports }}
              ports:
                {{- range .ports }}
                - name: {{ .name }}
                  {{- if .containerPort }}
                  containerPort: {{ .containerPort }}
                  {{- end }}
                  {{- if .protocol }}
                  protocol: {{ .protocol }}
                  {{- end }}
                  {{- if .hostPort }}
                  hostPort: {{ .hostPort }}
                  {{- end }}
                  {{- if .hostIP }}
                  hostIP: {{ .hostIP }}
                  {{- end }}
                {{- end }}
              {{- end }}
              {{- if .env }}
              env:
                {{- range .env }}
                - name: {{ .name }}
                  {{- if .value }}
                  value: {{ .value }}
                  {{- end }}
                  {{- if .valueFrom }}
                  valueFrom:
                    {{- if .valueFrom.configMapKeyRef }}
                    configMapKeyRef:
                      name: {{ .valueFrom.configMapKeyRef.name }}
                      key: {{ .valueFrom.configMapKeyRef.key }}
                    {{- end }}
                    {{- if .valueFrom.secretKeyRef }}
                    secretKeyRef:
                      name: {{ .valueFrom.secretKeyRef.name }}
                      key: {{ .valueFrom.secretKeyRef.key }}
                    {{- end }}
                    {{- if .valueFrom.fieldRef }}
                    fieldRef:
                      fieldPath: {{ .valueFrom.fieldRef.fieldPath }}
                    {{- end }}
                    {{- if .valueFrom.resourceFieldRef }}
                    resourceFieldRef:
                      containerName: {{ .valueFrom.resourceFieldRef.containerName }}
                      resource: {{ .valueFrom.resourceFieldRef.resource }}
                      divisor: {{ .valueFrom.resourceFieldRef.divisor }}
                    {{- end }}    
                  {{- end }}  
                {{- end }}
              {{- end }}
              {{- if .envFrom }}
              envFrom:
                {{- range .envFrom }}
                - configMapRef:
                    name: {{ .configMapRef.name }}
                    optional: {{ .configMapRef.optional }}
                  secretRef:
                    name: {{ .secretRef.name }}
                    optional: {{ .secretRef.optional }}
                {{- end }}
              {{- end }}
              {{- if .resources }}
              resources:
                {{- if .resources.limits }}
                limits:
                  {{- range $k, $v := .resources.limits }}
                  {{ $k }}: {{ $v }}
                  {{- end }}
                {{- end }}
                {{- if .resources.requests }}
                requests:
                  {{- range $k, $v := .resources.requests }}
                  {{ $k }}: {{ $v }}
                  {{- end }}
                {{- end }}
              {{- end }}  
              {{- if .livenessProbe }}
              livenessProbe:
                {{- template "l_probe" .livenessProbe }}
              {{- end }}
              {{- if .readinessProbe }}
              readinessProbe:
                {{- template "l_probe" .readinessProbe }}
              {{- end }}
              {{- if .startupProbe }}
              startupProbe:
                {{- template "l_probe" .startupProbe }}
              {{- end }}
              {{- if .lifecycle }}
              lifecycle:
                {{- if .lifecycle.postStart }}
                postStart:
                  exec:
                    command:
                      {{- range .lifecycle.postStart.exec.command }}
                      - {{ . }}
                      {{- end }}
                {{- end }}
                {{- if .lifecycle.preStop }}
                preStop:
                  exec:
                    command:
                      {{- range .lifecycle.preStop.exec.command }}
                      - {{ . }}
                      {{- end }}
                {{- end }}      
              {{- end }}
              {{- if .securityContext }}
              securityContext:
                {{- if .securityContext.runAsUser }}
                runAsUser: {{ .securityContext.runAsUser }}
                {{- end }}
                {{- if .securityContext.runAsGroup }}
                runAsGroup: {{ .securityContext.runAsGroup }}
                {{- end }}
                {{- if .securityContext.privileged }}
                privileged: {{ .securityContext.privileged }}
                {{- end }}
                {{- if .securityContext.readOnlyRootFilesystem }}
                readOnlyRootFilesystem: {{ .securityContext.readOnlyRootFilesystem }}
                {{- end }}
                {{- if .securityContext.allowPrivilegeEscalation }}
                allowPrivilegeEscalation: {{ .securityContext.allowPrivilegeEscalation }}
                {{- end }}
                {{- if .securityContext.runAsNonRoot }}
                runAsNonRoot: {{ .securityContext.runAsNonRoot }}
                {{- end }}
                {{- if .securityContext.capabilities }}
                capabilities:
                  {{- if .securityContext.capabilities.add }}
                  add:
                    {{- range .securityContext.capabilities.add }}
                    - {{ . }}
                    {{- end }}
                  {{- end }}
                  {{- if .securityContext.capabilities.drop }}
                  drop:
                    {{- range .securityContext.capabilities.drop }}
                    - {{ . }}
                    {{- end }}
                  {{- end }}  
                {{- end }}
                {{- if .securityContext.seccompProfile }}
                seccompProfile:
                  type: {{ .securityContext.seccompProfile.type }}
                  localhostProfile: {{ .securityContext.seccompProfile.localhostProfile }}
                {{- end }}
              {{- end }}
              {{- if .volumeMounts }}
              volumeMounts:
                {{- range .volumeMounts }}
                - name: {{ .name }}
                  {{- if .mountPath }}
                  mountPath: {{ .mountPath }}
                  {{- end }}
                  {{- if .readOnly }}
                  readOnly: {{ .readOnly }}
                  {{- end }}
                  {{- if .subPath }}
                  subPath: {{ .subPath }}
                  {{- end }}
                  {{- if .subPathExpr }}
                  subPathExpr: {{ .subPathExpr }}
                  {{- end }}
                  {{- if .mountPropagation }}
                  mountPropagation: {{ .mountPropagation }}
                  {{- end }}
                {{- end }}
              {{- end }}
              {{- if .volumeDevices }}
              volumeDevices:
                {{- range .volumeDevices }}
                - name: {{ .name }}
                  devicePath: {{ .devicePath }}
                {{- end }}
              {{- end }}
              {{- if .stdin }}
              stdin: {{ .stdin }}
              {{- end }}
              {{- if .stdinOnce }}
              stdinOnce: {{ .stdinOnce }}
              {{- end }}
              {{- if .tty }}
              tty: {{ .tty }}
              {{- end }}
              {{- if .imagePullPolicy }}
              imagePullPolicy: {{ .imagePullPolicy }}
              {{- end }}
              {{- if .terminationMessagePath }}
              terminationMessagePath: {{ .terminationMessagePath }}
              {{- end }}
              {{- if .terminationMessagePolicy }}
              terminationMessagePolicy: {{ .terminationMessagePolicy }}
              {{- end -}}  
      {{ end }}
      {{- define "l_volume" -}}
            - name: {{ .name }}
              {{- if .configMap }}
              configMap:
                name: {{ .configMap.name }}
                {{- if .configMap.items }}
                items:
                  {{- range .configMap.items }}
                  - key: {{ .key }}
                    path: {{ .path }}
                    {{- if .mode }} mode: {{ .mode }}{{- end }}
                  {{- end }}
                {{- end }}
                {{- if .configMap.defaultMode }}
                defaultMode: {{ .configMap.defaultMode }}
                {{- end }}
                {{- if .configMap.optional }}
                optional: {{ .configMap.optional }}
                {{- end }}
              {{- end }}
              {{- if .secret }}
              secret:
                secretName: {{ .secret.secretName }}
                {{- if .secret.items }}
                items:
                  {{- range .secret.items }}
                  - key: {{ .key }}
                    path: {{ .path }}
                    {{- if .mode }} mode: {{ .mode }}{{- end }}
                  {{- end }}
                {{- end }}
                {{- if .secret.defaultMode }}
                defaultMode: {{ .secret.defaultMode }}
                {{- end }}
                {{- if .secret.optional }}
                optional: {{ .secret.optional }}
                {{- end }}
              {{- end }}
              {{- if .emptyDir }}
              emptyDir:
                {{- if .emptyDir.medium }}
                medium: {{ .emptyDir.medium }}
                {{- end }}
                {{- if .emptyDir.sizeLimit }}
                sizeLimit: {{ .emptyDir.sizeLimit }}
                {{- end }}
              {{- end }}
              {{- if .hostPath }}
              hostPath:
                path: {{ .hostPath.path }}
                {{- if .hostPath.type }}type: {{ .hostPath.type }}{{- end }}
              {{- end }}
              {{- if .persistentVolumeClaim }}
              persistentVolumeClaim:
                claimName: {{ .persistentVolumeClaim.claimName }}
                {{- if .persistentVolumeClaim.readOnly }}readOnly: {{ .persistentVolumeClaim.readOnly }}{{- end }}
              {{- end }}
              {{- if .projected }}
              projected:
                {{- if .projected.sources }}
                sources:
                  {{- range .projected.sources }}
                  - {{- if .secret }}
                      secret:
                        name: {{ .secret.name }}
                        {{- if .secret.items }}
                        items:
                          {{- range .secret.items }}
                          - key: {{ .key }}
                            path: {{ .path }}
                            {{- if .mode }} mode: {{ .mode }}{{- end }}
                          {{- end }}
                        {{- end }}
                        {{- if .secret.optional }}optional: {{ .secret.optional }}{{- end }}
                      {{- end }}
                    {{- if .configMap }}
                      configMap:
                        name: {{ .configMap.name }}
                        {{- if .configMap.items }}
                        items:
                          {{- range .configMap.items }}
                          - key: {{ .key }}
                            path: {{ .path }}
                            {{- if .mode }} mode: {{ .mode }}{{- end }}
                          {{- end }}
                        {{- end }}
                        {{- if .configMap.optional }}optional: {{ .configMap.optional }}{{- end }}
                      {{- end }}
                    {{- if .downwardAPI }}
                      downwardAPI:
                        items:
                          {{- range .downwardAPI.items }}
                          - path: {{ .path }}
                            fieldRef:
                              fieldPath: {{ .fieldRef.fieldPath }}
                            {{- if .mode }}mode: {{ .mode }}{{- end }}
                          {{- end }}
                      {{- end }}
                    {{- if .serviceAccountToken }}
                      serviceAccountToken:
                        audience: {{ .serviceAccountToken.audience }}
                        expirationSeconds: {{ .serviceAccountToken.expirationSeconds }}
                        path: {{ .serviceAccountToken.path }}
                    {{- end }}
                  {{- end }}
                {{- end }}
                {{- if .projected.defaultMode }}defaultMode: {{ .projected.defaultMode }}{{- end }}
              {{- end }}
              {{- if .downwardAPI }}
              downwardAPI:
                items:
                  {{- range .downwardAPI.items }}
                  - path: {{ .path }}
                    fieldRef:
                      fieldPath: {{ .fieldRef.fieldPath }}
                    {{- if .mode }}mode: {{ .mode }}{{- end }}
                  {{- end }}
              {{- end }}
              {{- if .nfs }}
              nfs:
                server: {{ .nfs.server }}
                path: {{ .nfs.path }}
                {{- if .nfs.readOnly }}readOnly: {{ .nfs.readOnly }}{{- end }}
              {{- end }}
              {{- if .csi }}
              csi:
                driver: {{ .csi.driver }}
                {{- if .csi.volumeHandle }}volumeHandle: {{ .csi.volumeHandle }}{{- end }}
                {{- if .csi.fsType }}fsType: {{ .csi.fsType }}{{- end }}
                {{- if .csi.readOnly }}readOnly: {{ .csi.readOnly }}{{- end }}
                {{- if .csi.volumeAttributes }}
                volumeAttributes:
                  {{- range $k, $v := .csi.volumeAttributes }}
                  {{ $k }}: {{ $v }}
                  {{- end }}
                {{- end }}
                {{- if .csi.nodePublishSecretRef }}
                nodePublishSecretRef:
                  name: {{ .csi.nodePublishSecretRef.name }}
                {{- end }}
              {{- end }}
              {{- if .iscsi }}
              iscsi:
                targetPortal: {{ .iscsi.targetPortal }}
                iqn: {{ .iscsi.iqn }}
                lun: {{ .iscsi.lun }}
                {{- if .iscsi.fsType }}fsType: {{ .iscsi.fsType }}{{- end }}
                {{- if .iscsi.readOnly }}readOnly: {{ .iscsi.readOnly }}{{- end }}
                {{- if .iscsi.portals }}
                portals:
                  {{- range .iscsi.portals }}
                  - {{ . }}
                  {{- end }}
                {{- end }}
                {{- if .iscsi.chapAuthDiscovery }}chapAuthDiscovery: {{ .iscsi.chapAuthDiscovery }}{{- end }}
                {{- if .iscsi.chapAuthSession }}chapAuthSession: {{ .iscsi.chapAuthSession }}{{- end }}
                {{- if .iscsi.secretRef }}
                secretRef:
                  name: {{ .iscsi.secretRef.name }}
                {{- end }}
                initiatorName: {{ .iscsi.initiatorName }}
              {{- end }}
              {{- if .azureDisk }}
              azureDisk:
                diskName: {{ .azureDisk.diskName }}
                diskURI: {{ .azureDisk.diskURI }}
                cachingMode: {{ .azureDisk.cachingMode }}
                fsType: {{ .azureDisk.fsType }}
                kind: {{ .azureDisk.kind }}
                readOnly: {{ .azureDisk.readOnly }}
              {{- end }}
              {{- if .azureFile }}
              azureFile:
                secretName: {{ .azureFile.secretName }}
                shareName: {{ .azureFile.shareName }}
                readOnly: {{ .azureFile.readOnly }}
              {{- end }}
              {{- if .gcePersistentDisk }}
              gcePersistentDisk:
                pdName: {{ .gcePersistentDisk.pdName }}
                fsType: {{ .gcePersistentDisk.fsType }}
                partition: {{ .gcePersistentDisk.partition }}
                readOnly: {{ .gcePersistentDisk.readOnly }}
              {{- end }}
              {{- if .fc }}
              fc:
                targetWWNs:
                  {{- range .fc.targetWWNs }}
                  - {{ . }}
                  {{- end }}
                lun: {{ .fc.lun }}
                fsType: {{ .fc.fsType }}
                readOnly: {{ .fc.readOnly }}
              {{- end }}
              {{- if .flexVolume }}
              flexVolume:
                driver: {{ .flexVolume.driver }}
                fsType: {{ .flexVolume.fsType }}
                options:
                  {{- range $k, $v := .flexVolume.options }}
                  {{ $k }}: {{ $v }}
                  {{- end }}
                readOnly: {{ .flexVolume.readOnly }}
                secretRef:
                  name: {{ .flexVolume.secretRef.name }}
              {{- end }}
              {{- if .flocker }}
              flocker:
                datasetName: {{ .flocker.datasetName }}
                datasetUUID: {{ .flocker.datasetUUID }}
              {{- end }}
              {{- if .photonPersistentDisk }}
              photonPersistentDisk:
                pdID: {{ .photonPersistentDisk.pdID }}
                fsType: {{ .photonPersistentDisk.fsType }}
              {{- end }}
              {{- if .portworxVolume }}
              portworxVolume:
                volumeID: {{ .portworxVolume.volumeID }}
                fsType: {{ .portworxVolume.fsType }}
                readOnly: {{ .portworxVolume.readOnly }}
              {{- end }}
              {{- if .quobyte }}
              quobyte:
                registry: {{ .quobyte.registry }}
                volume: {{ .quobyte.volume }}
                readOnly: {{ .quobyte.readOnly }}
                user: {{ .quobyte.user }}
                group: {{ .quobyte.group }}
                tenant: {{ .quobyte.tenant }}
              {{- end }}
              {{- if .scaleIO }}
              scaleIO:
                gateway: {{ .scaleIO.gateway }}
                system: {{ .scaleIO.system }}
                secretRef:
                  name: {{ .scaleIO.secretRef.name }}
                sslEnabled: {{ .scaleIO.sslEnabled }}
                protectionDomain: {{ .scaleIO.protectionDomain }}
                storagePool: {{ .scaleIO.storagePool }}
                storageMode: {{ .scaleIO.storageMode }}
                volumeName: {{ .scaleIO.volumeName }}
                fsType: {{ .scaleIO.fsType }}
                readOnly: {{ .scaleIO.readOnly }}
              {{- end }}
              {{- if .storageos }}
              storageos:
                volumeName: {{ .storageos.volumeName }}
                volumeNamespace: {{ .storageos.volumeNamespace }}
                fsType: {{ .storageos.fsType }}
                readOnly: {{ .storageos.readOnly }}
                secretRef:
                  name: {{ .storageos.secretRef.name }}
              {{- end }}
              {{- if .vsphereVolume }}
              vsphereVolume:
                volumePath: {{ .vsphereVolume.volumePath }}
                fsType: {{ .vsphereVolume.fsType }}
              {{- end }}
      {{- end -}}
      {{- define "l_pod" -}}
            {{- if .serviceAccountName }}
            serviceAccountName: {{ .serviceAccountName }}
            {{- end }}
            {{- if .priorityClassName }}
            priorityClassName: {{ .priorityClassName }}
            {{- end }}
            {{- if .restartPolicy }}
            restartPolicy: {{ .restartPolicy }}
            {{- end }}
            {{- if .dnsPolicy }}
            dnsPolicy: {{ .dnsPolicy }}
            {{- end }}
            {{- if .hostNetwork }}
            hostNetwork: {{ .hostNetwork }}
            {{- end }}
            {{- if .hostPID }}
            hostPID: {{ .hostPID }}
            {{- end }}
            {{- if .hostIPC }}
            hostIPC: {{ .hostIPC }}
            {{- end }}
            {{- if .securityContext }}
            securityContext:
              {{- if .securityContext.runAsUser }}
              runAsUser: {{ .securityContext.runAsUser }}
              {{- end }}
              {{- if .securityContext.runAsGroup }}
              runAsGroup: {{ .securityContext.runAsGroup }}
              {{- end }}
              {{- if .securityContext.fsGroup }}
              fsGroup: {{ .securityContext.fsGroup }}
              {{- end }}
              {{- if .securityContext.runAsNonRoot }}
              runAsNonRoot: {{ .securityContext.runAsNonRoot }}
              {{- end }}
              {{- if .securityContext.supplementalGroups }}
              supplementalGroups:
                {{- range .securityContext.supplementalGroups }}
                - {{ . }}
                {{- end }}
              {{- end }}
              {{- if .securityContext.seLinuxOptions }}
              seLinuxOptions:
                {{- if .securityContext.seLinuxOptions.level }}
                level: {{ .securityContext.seLinuxOptions.level }}
                {{- end }}
                {{- if .securityContext.seLinuxOptions.role }}
                role: {{ .securityContext.seLinuxOptions.role }}
                {{- end }}
                {{- if .securityContext.seLinuxOptions.type }}
                type: {{ .securityContext.seLinuxOptions.type }}
                {{- end }}
                {{- if .securityContext.seLinuxOptions.user }}
                user: {{ .securityContext.seLinuxOptions.user }}
                {{- end }}
              {{- end }}
              {{- if .securityContext.sysctls }}
              sysctls:
                {{- range .securityContext.sysctls }}
                - name: {{ .name }}
                  value: {{ .value }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if .initContainers }}
            initContainers:
              {{- range .initContainers }}
            - {{ template "l_container" . }}
              {{- end }}
            {{- end }}
            {{- if .containers }}
            containers:
              {{- range .containers }}
            - {{ template "l_container" . }}
              {{- end }}
            {{- end }}
            {{- if .volumes }}
            volumes:
              {{- range .volumes }}
            {{ template "l_volume" . }}
              {{- end }}
            {{- end }}
            {{- if .affinity }}
              # expand all fields for affinity (nodeAffinity, podAffinity, podAntiAffinity)
              # ... (add nodeAffinity, podAffinity, podAntiAffinity, preferred fields)
            {{- end }}
            {{- if .nodeSelector }}
            nodeSelector:
              {{- range $k, $v := .nodeSelector }}
              {{ $k }}: {{ $v }}
              {{- end }}
            {{- end }}
            {{- if .tolerations }}
            tolerations:
              {{- range .tolerations }}
              - key: {{ .key }}
                {{- if .operator }}
                operator: {{ .operator }}
                {{- end }}
                {{- if .value }}
                value: {{ .value }}
                {{- end }}
                {{- if .effect }}
                effect: {{ .effect }}
                {{- end }}
                {{- if .tolerationSeconds }}
                tolerationSeconds: {{ .tolerationSeconds }}
                {{- end }}
              {{- end }}
            {{- end }}
            {{- if .imagePullSecrets }}
            imagePullSecrets:
              {{- range .imagePullSecrets }}
              - name: {{ .name }}
              {{- end }}
            {{- end }}
            {{- if .hostAliases }}
            hostAliases:
              {{- range .hostAliases }}
              - ip: {{ .ip }}
                hostnames:
                  {{- range .hostnames }}
                  - {{ . }}
                  {{- end }}
              {{- end }}
            {{- end }}
            {{- if .readinessGates  }}
            readinessGates:
              {{- range .readinessGates }}
              - conditionType: {{ .conditionType }}
              {{- end }}
            {{- end }}
            {{- if .schedulerName }}
            schedulerName: {{ .schedulerName }}
            {{- end }}
            {{- if .subdomain }}
            subdomain: {{ .subdomain }}
            {{- end }}
            {{- if .shareProcessNamespace }}
            shareProcessNamespace: {{ .shareProcessNamespace }}
            {{- end }}
            {{- if .terminationGracePeriodSeconds }}
            terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
            {{- end }}
            {{- if .automountServiceAccountToken }}
            automountServiceAccountToken: {{ .automountServiceAccountToken }}
            {{- end }}
            {{- if .setHostnameAsFQDN }}
            setHostnameAsFQDN: {{ .setHostnameAsFQDN }}
            {{- end }}
            {{- if .dnsConfig }}
            dnsConfig:
              {{- if .dnsConfig.nameservers }}
              nameservers:
                {{- range .dnsConfig.nameservers }}
                - {{ . }}
                {{- end }}
              {{- end }}
              {{- if .dnsConfig.options }}  
              options:
                {{- range .dnsConfig.options }}
                - name: {{ .name }}
                  value: {{ .value }}
                {{- end }}
              {{- end }}
              {{- if .dnsConfig.searches }}
              searches:
                {{- range .dnsConfig.searches }}
                - {{ . }}
                {{- end }}
              {{- end }}  
            {{- end -}}
      {{- end -}}
      subjectArea: {{ .Values.subjectArea }}
      {{- if .Values.apiVersion }}
      apiVersion: {{ .Values.apiVersion }}
      {{- end }}
      {{- if .Values.namespace }}
      namespace: {{ .Values.namespace }}
      {{- end }}      
      {{- if .Values.metadata }}
      metadata:
        {{- if .Values.metadata.labels }}
        labels:
          {{- range $k, $v := .Values.metadata.labels }}
          {{ $k }}: {{ $v }}
          {{- end }}
        {{- end }}
        {{- if .Values.metadata.annotations }}
        annotations:
          {{- range $k, $v := .Values.metadata.annotations }}
          {{ $k }}: {{ $v }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.servers }}
      servers:
      {{- range .Values.servers }}
        {{ .name }}:
          name: {{ .name }}
          {{- if .labels }}
          labels:
            {{- range $k, $v := .labels }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
          {{- if .annotations }}
          annotations:
            {{- range $k, $v := .annotations }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
          {{- if .serverConfig }}
          serverConfig: {{ .serverConfig }}
          {{- end }}
          {{- if .extraCapabilities }}
          extraCapabilities:
            {{- range .extraCapabilities }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .capabilities }}
          capabilities:
            {{- range .capabilities }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .imageOverrides }}
          imageOverrides:
            {{- if .imageOverrides.agent }}
            agent:
              {{ template "l_container" .imageOverrides.agent }}
            {{- end }}
            {{- if .imageOverrides.rclone }}
            rclone:
              {{ template "l_container" .imageOverrides.rclone }}
            {{- end }}
          {{- end }}
          {{- if .podSpec }}
          podSpec:
            {{- template "l_pod" .podSpec }}
          {{- end }}
          {{- if .statefulSetPersistentVolumeClaimRetentionPolicy }}
          statefulSetPersistentVolumeClaimRetentionPolicy:
            {{- if .statefulSetPersistentVolumeClaimRetentionPolicy.whenDeleted }}
            whenDeleted: {{ .statefulSetPersistentVolumeClaimRetentionPolicy.whenDeleted }}
            {{- end }}
            {{- if .statefulSetPersistentVolumeClaimRetentionPolicy.whenScaled }}
            whenScaled: {{ .statefulSetPersistentVolumeClaimRetentionPolicy.whenScaled }}
            {{- end }}
          {{- end }}
          {{- if .replicas }}
          replicas: {{ .replicas }}
          {{- end }}
          {{- if .minReplicas }}
          minReplicas: {{ .minReplicas }}
          {{- end }}
          {{- if .maxReplicas }}
          maxReplicas: {{ .maxReplicas }}
          {{- end }}
          {{- if .disableAutoUpdate }}
          disableAutoUpdate: {{ .disableAutoUpdate }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.models }}
      models:
      {{- range .Values.models }}
        {{ .name }}:
          name: {{ .name }}
          {{- if .labels }}
          labels:
            {{- range $k, $v := .labels }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
          {{- if .annotations }}
          annotations:
            {{- range $k, $v := .annotations }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}        
          storageUri: {{ .storageUri }}
          {{- if .artifactVersion }}
          artifactVersion: {{ .artifactVersion }}
          {{- end }}
          {{- if .modelType }}
          modelType: {{ .modelType }}
          {{- end }}
          {{- if .schemaUri }}
          schemaUri: {{ .schemaUri }}
          {{- end }}
          {{- if .secretName }}
          secretName: {{ .secretName }}
          {{- end }}
          {{- if .requirements }}
          requirements:
            {{- range .requirements }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .memory }}
          memory: {{ .memory }}
          {{- end }}
          {{- if .replicas }}
          replicas: {{ .replicas }}
          {{- end }}
          {{- if .minReplicas }}
          minReplicas: {{ .minReplicas }}
          {{- end }}
          {{- if .maxReplicas }}
          maxReplicas: {{ .maxReplicas }}
          {{- end }}
          {{- if .server }}
          server: {{ .server }}
          {{- end }}
          {{- if .preloaded }}
          preloaded: {{ .preloaded }}
          {{- end }}
          {{- if .dedicated }}
          dedicated: {{ .dedicated }}
          {{- end }}
          {{- if .logger }}
          logger:
            {{- if .logger.percent }}
            percent: {{ .logger.percent }}
            {{- end }}
          {{- end }}
          {{- if .explainer }}
          explainer:
            {{- if .explainer.type }}
            type: {{ .explainer.type }}
            {{- end }}
            {{- if .explainer.modelRef }}
            modelRef: {{ .explainer.modelRef }}
            {{- end }}
            {{- if .explainer.pipelineRef }}
            pipelineRef: {{ .explainer.pipelineRef }}
            {{- end }}
          {{- end }}
          {{- if .parameters }}
          parameters:
            {{- range .parameters }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          {{- end }}
          {{- if .Llm }}
          llm:
            {{- if .llm.modelRef }}
            modelRef: {{ .llm.ModelRef }}
            {{- end }}
            {{- if .llm.pipelineRef }}
            pipelineRef: {{ .Llm.pipelineRef }}
            {{- end }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.pipelines }}
      pipelines:
      {{- range .Values.pipelines }}
        {{ .name }}:
          name: {{ .name }}
          {{- if .labels }}
          labels:
            {{- range $k, $v := .labels }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
          {{- if .annotations }}
          annotations:
            {{- range $k, $v := .annotations }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
          {{- if .input }}
          input:
            {{- if .input.externalInputs }}
            externalInputs:
              {{- range .input.externalInputs }}
              - {{ . }}
              {{- end }}
            {{- end }}
            {{- if .input.externalTriggers }}
            externalTriggers:
              {{- range .input.externalTriggers }}
              - {{ . }}
              {{- end }}
            {{- end }}
            {{- if .input.joinWindowMs }}
            joinWindowMs: {{ .input.joinWindowMs }}
            {{- end }}
            {{- if .input.joinType }}
            joinType: {{ .input.joinType }}
            {{- end }}
            {{- if .input.triggersJoinType }}
            triggersJoinType: {{ .input.triggersJoinType }}
            {{- end }}
            {{- if .input.tensorMap }}
            tensorMap:
              {{- range $k, $v := .input.tensorMap }}
              {{ $k }}: {{ $v }}
              {{- end }}
            {{- end }}
          {{- end }}
          steps:
            {{- range .steps }}
            - name: {{ .name }}
              {{- if .inputs }}
              inputs:
                {{- range .inputs }}
                - {{ . }}
                {{- end }}
              {{- end }}
              {{- if .joinWindowMs }}
              joinWindowMs: {{ .joinWindowMs }}
              {{- end }}
              {{- if .tensorMap }}
              tensorMap:
                {{- range $k, $v := .tensorMap }}
                {{ $k }}: {{ $v }}
                {{- end }}
              {{- end }}
              {{- if .triggers }}
              triggers:
                {{- range .triggers }}
                - {{ . }}
                {{- end }}
              {{- end }}
              {{- if .inputsJoinType }}
              inputsJoinType: {{ .inputsJoinType }}
              {{- end }}
              {{- if .triggersJoinType }}
              triggersJoinType: {{ .triggersJoinType }}
              {{- end }}
              {{- if .batch }}
              batch:
                {{- if .batch.size }}
                size: {{ .batch.size }}
                {{- end }}
                {{- if .batch.windowMs }}
                windowMs: {{ .batch.windowMs }}
                {{- end }}
                {{- if .batch.rolling }}
                rolling: {{ .batch.rolling }}
                {{- end }}
              {{- end }}
            {{- end }}
          {{- if .output }}
          output:
            {{- if .output.steps }}
            steps:
              {{- range .output.steps }}
              - {{ . }}
              {{- end }}
            {{- end }}
            {{- if .output.joinWindowMs }}
            joinWindowMs: {{ .output.joinWindowMs }}
            {{- end }}
            {{- if .output.stepsJoin }}
            stepsJoin: {{ .output.stepsJoin }}
            {{- end }}
            {{- if .output.tensorMap }}
            tensorMap:
              {{- range $k, $v := .output.tensorMap }}
              {{ $k }}: {{ $v }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .Dataflow }}
          dataflow:
            {{- if ne .Dataflow.CleanTopicsOnDelete false }}
            cleanTopicsOnDelete: {{ .Dataflow.CleanTopicsOnDelete }}
            {{- end }}
          {{- end }}
          {{- if ne .AllowCycles false }}
          allowCycles: {{ .AllowCycles }}
          {{- end }}
          {{- if .MaxStepRevisits }}
          maxStepRevisits: {{ .MaxStepRevisits }}
          {{- end }}
      {{- end }}
      {{- end }}

  - path: templates/01_servers.yaml
    template: false
    content: |
      {{- if .Values.servers }}
      {{- range $name, $server := .Values.servers }}
      {{- with $server }}
      ---
      apiVersion: {{ $.Values.apiVersion }}
      kind: Server
      metadata:
        name: {{ .name }}
        namespace: {{ $.Values.namespace }}
        labels:
          {{- include "common.helm-labels" $ | nindent 4 }}
        {{- if $.Values.metadata }}
        {{- if $.Values.metadata.labels }}
        {{- range $k, $v :=$.Values.metadata.labels }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .labels }}
        {{- range $k, $v :=.labels }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- if or (and $.Values.metadata $.Values.metadata.annotations) .annotations }}
        annotations:
        {{- end }}
        {{- if $.Values.metadata }}
        {{- if $.Values.metadata.annotations }}
        {{- range $k, $v := $.Values.metadata.annotations }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .annotations }}
        {{- range $k, $v := .annotations }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
      spec:
        {{- if .serverConfig }}
        serverConfig: {{ .serverConfig }}
        {{- end }}
        {{- if .extraCapabilities }}
        extraCapabilities:
          {{- range .extraCapabilities }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if .capabilities }}
        capabilities:
          {{- range .capabilities }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if .imageOverrides }}
        imageOverrides:
          {{- if .imageOverrides.agent }}
          agent:
            {{- "\n" }}{{ include "container" .imageOverrides.agent | indent 4 }}
          {{- end }}
          {{- if .imageOverrides.rclone }}
          rclone:
            {{- "\n" }}{{ include "container" .imageOverrides.rclone | indent 4 }}
          {{- end }}
        {{- end }}
        {{- if .podSpec }}
        podSpec:
          {{- "\n    " }}{{- include "pod" .podSpec | indent 2 | trim }}
        {{- end }}
        {{- if .statefulSetPersistentVolumeClaimRetentionPolicy }}
        statefulSetPersistentVolumeClaimRetentionPolicy:
          {{- if .statefulSetPersistentVolumeClaimRetentionPolicy.whenDeleted }}
          whenDeleted: {{ .statefulSetPersistentVolumeClaimRetentionPolicy.whenDeleted }}
          {{- end }}
          {{- if .statefulSetPersistentVolumeClaimRetentionPolicy.whenScaled }}
          whenScaled: {{ .statefulSetPersistentVolumeClaimRetentionPolicy.whenScaled }}
          {{- end }}
        {{- end }}
        {{- if .replicas }}
        replicas: {{ .replicas }}
        {{- end }}
        {{- if .minReplicas }}
        minReplicas: {{ .minReplicas }}
        {{- end }}
        {{- if .maxReplicas }}
        maxReplicas: {{ .maxReplicas }}
        {{- end }}
        {{- if .disableAutoUpdate }}
        disableAutoUpdate: {{ .disableAutoUpdate }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}

  - path: templates/02_models.yaml
    template: false
    content: |
      {{- if .Values.models }}
      {{- range $name, $model := .Values.models }}
      {{- with $model }}
      ---
      apiVersion: {{ $.Values.apiVersion }}
      kind: Model
      metadata:
        name: {{ .name }}
        namespace: {{ $.Values.namespace }}
        labels:
          {{- include "common.helm-labels" $ | nindent 4 }}
        {{- if $.Values.metadata }}
        {{- if $.Values.metadata.labels }}
        {{- range $k, $v :=$.Values.metadata.labels }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .labels }}
        {{- range $k, $v :=.labels }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- if or (and $.Values.metadata $.Values.metadata.annotations) .annotations }}
        annotations:
        {{- end }}
        {{- if $.Values.metadata }}
        {{- if $.Values.metadata.annotations }}
        {{- range $k, $v := $.Values.metadata.annotations }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .annotations }}
        {{- range $k, $v := .annotations }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
      spec:
        storageUri: {{ .storageUri | quote }}
        {{- if .artifactVersion }}
        artifactVersion: {{ .artifactVersion }}
        {{- end }}
        {{- if .modelType }}
        modelType: {{ .modelType }}
        {{- end }}
        {{- if .schemaUri }}
        schemaUri: {{ .schemaUri | quote }}
        {{- end }}
        {{- if .secretName }}
        secretName: {{ .secretName }}
        {{- end }}
        {{- if .requirements }}
        requirements:
          {{- range .requirements }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if .memory }}
        memory: {{ .memory }}
        {{- end }}
        {{- if .replicas }}
        replicas: {{ .replicas }}
        {{- end }}
        {{- if .minReplicas }}
        minReplicas: {{ .minReplicas }}
        {{- end }}
        {{- if .maxReplicas }}
        maxReplicas: {{ .maxReplicas }}
        {{- end }}
        {{- if .server }}
        server: {{ .server }}
        {{- end }}
        {{- if .preloaded }}
        preloaded: {{ .preloaded }}
        {{- end }}
        {{- if .dedicated }}
        dedicated: {{ .dedicated }}
        {{- end }}
        {{- if .logger }}
        logger:
          {{- if .logger.percent }}
          percent: {{ .logger.percent }}
          {{- end }}
        {{- end }}
        {{- if .explainer }}
        explainer:
          {{- if .explainer.type }}
          type: {{ .explainer.type }}
          {{- end }}
          {{- if .explainer.modelRef }}
          modelRef: {{ .explainer.modelRef }}
          {{- end }}
          {{- if .explainer.pipelineRef }}
          pipelineRef: {{ .explainer.pipelineRef }}
          {{- end }}
        {{- end }}
        {{- if .parameters }}
        parameters:
          {{- range .parameters }}
          - name: {{ .name }}
            value: {{ .value }}
          {{- end }}
        {{- end }}
        {{- if .llm }}
        llm:
          {{- if .llm.modelRef }}
          modelRef: {{ .llm.modelRef }}
          {{- end }}
          {{- if .llm.pipelineRef }}
          pipelineRef: {{ .llm.pipelineRef }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}

  - path: templates/03_pipelines.yaml
    template: false
    content: |
      {{- if .Values.pipelines }}
      {{- range $name, $pipeline := .Values.pipelines }}
      {{- with $pipeline }}
      ---
      apiVersion: {{ $.Values.apiVersion }}
      kind: Pipeline
      metadata:
        name: {{ .name }}
        namespace: {{ $.Values.namespace }}
        labels:
          {{- include "common.helm-labels" $ | nindent 4 }}
        {{- if $.Values.metadata }}
        {{- if $.Values.metadata.labels }}
        {{- range $k, $v :=$.Values.metadata.labels }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .labels }}
        {{- range $k, $v :=.labels }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- if or (and $.Values.metadata $.Values.metadata.annotations) .annotations }}
        annotations:
        {{- end }}
        {{- if $.Values.metadata }}
        {{- if $.Values.metadata.annotations }}
        {{- range $k, $v := $.Values.metadata.annotations }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- if .annotations }}
        {{- range $k, $v := .annotations }}
          {{ $k }}: {{ $v }}
        {{- end }}
        {{- end }}
      spec:
        {{- if .input }}
        input:
          {{- if .input.externalInputs }}
          externalInputs:
            {{- range .input.externalInputs }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .input.externalTriggers }}
          externalTriggers:
            {{- range .input.externalTriggers }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .input.joinWindowMs }}
          joinWindowMs: {{ .input.joinWindowMs }}
          {{- end }}
          {{- if .input.joinType }}
          joinType: {{ .input.joinType }}
          {{- end }}
          {{- if .input.triggersJoinType }}
          triggersJoinType: {{ .input.triggersJoinType }}
          {{- end }}
          {{- if .input.tensorMap }}
          tensorMap:
            {{- range $k, $v := .input.tensorMap }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
        {{- end }}
        steps:
          {{- range .steps }}
          - name: {{ .name }}
            {{- if .inputs }}
            inputs:
              {{- range .inputs }}
              - {{ . }}
              {{- end }}
            {{- end }}
            {{- if .joinWindowMs }}
            joinWindowMs: {{ .joinWindowMs }}
            {{- end }}
            {{- if .tensorMap }}
            tensorMap:
              {{- range $k, $v := .tensorMap }}
              {{ $k }}: {{ $v }}
              {{- end }}
            {{- end }}
            {{- if .triggers }}
            triggers:
              {{- range .triggers }}
              - {{ . }}
              {{- end }}
            {{- end }}
            {{- if .inputsJoinType }}
            inputsJoinType: {{ .inputsJoinType }}
            {{- end }}
            {{- if .triggersJoinType }}
            triggersJoinType: {{ .triggersJoinType }}
            {{- end }}
            {{- if .batch }}
            batch:
              {{- if .batch.size }}
              size: {{ .batch.size }}
              {{- end }}
              {{- if .batch.windowMs }}
              windowMs: {{ .batch.windowMs }}
              {{- end }}
              {{- if .batch.rolling }}
              rolling: {{ .batch.rolling }}
              {{- end }}
            {{- end }}
          {{- end }}
        {{- if .output }}
        output:
          {{- if .output.steps }}
          steps:
            {{- range .output.steps }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .output.joinWindowMs }}
          joinWindowMs: {{ .output.joinWindowMs }}
          {{- end }}
          {{- if .output.stepsJoin }}
          stepsJoin: {{ .output.stepsJoin }}
          {{- end }}
          {{- if .output.tensorMap }}
          tensorMap:
            {{- range $k, $v := .output.tensorMap }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .Dataflow }}
        dataflow:
          {{- if ne .Dataflow.CleanTopicsOnDelete false }}
          cleanTopicsOnDelete: {{ .Dataflow.CleanTopicsOnDelete }}
          {{- end }}
        {{- end }}
        {{- if ne .AllowCycles false }}
        allowCycles: {{ .AllowCycles }}
        {{- end }}
        {{- if .MaxStepRevisits }}
        maxStepRevisits: {{ .MaxStepRevisits }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}      
      
  - path: templates/_helpers.tpl
    template: false
    content: |
      {{- define "common.helm-labels" -}}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/revision: {{ .Release.Revision | quote }}
      app.dognauts/subjectArea: {{ .Values.subjectArea }}
      {{- end -}}
      {{- define "probe" }}
      {{- if .exec }}
      exec:
        command:
          {{- range .exec.command }}
          - {{ . }}
          {{- end }}
      {{- end }}
      {{- if .httpGet }}
      httpGet:
        {{- if .httpGet.path }}
        path: {{ .httpGet.path }}
        {{- end }}
        {{- if .httpGet.port }}
        port: {{ .httpGet.port }}
        {{- end }}
        {{- if .httpGet.scheme }}
        scheme: {{ .httpGet.scheme }}
        {{- end }}
        {{- if .httpGet.host }}
        host: {{ .httpGet.host }}
        {{- end }}
        {{- if .httpGet.httpHeaders }}
        httpHeaders:
          {{- range .httpGet.httpHeaders }}
          - name: {{ .name }}
            value: {{ .value }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .tcpSocket }}
      tcpSocket:
        port: {{ .tcpSocket.port }}
        {{- if .tcpSocket.host }}
        host: {{ .tcpSocket.host }}
        {{- end }}
      {{- end }}
      {{- if .grpc }}
      grpc:
        port: {{ .grpc.port }}
        {{- if .grpc.service }}
        service: {{ .grpc.service }}
        {{- end }}
      {{- end }}
      {{- if .initialDelaySeconds }}
      initialDelaySeconds: {{ .initialDelaySeconds }}
      {{- end }}
      {{- if .timeoutSeconds }}
      timeoutSeconds: {{ .timeoutSeconds }}
      {{- end }}
      {{- if .periodSeconds }}
      periodSeconds: {{ .periodSeconds }}
      {{- end }}
      {{- if .successThreshold }}
      successThreshold: {{ .successThreshold }}
      {{- end }}
      {{- if .failureThreshold }}
      failureThreshold: {{ .failureThreshold }}
      {{- end }}
      {{- end }}
      {{- define "container" -}}
        {{ "name: " | indent 2 }}{{ .name }}
        {{- if .image }}
        image: {{ .image }}
        {{- end }}
        {{- if .command }}
        command:
          {{- range .command }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if .args }}
        args:
          {{- range .args }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if .workingDir }}
        workingDir: {{ .workingDir }}
        {{- end }}
        {{- if .ports }}
        ports:
          {{- range .ports }}
          - name: {{ .name }}
            {{- if .containerPort }}
            containerPort: {{ .containerPort }}
            {{- end }}
            {{- if .protocol }}
            protocol: {{ .protocol }}
            {{- end }}
            {{- if .hostPort }}
            hostPort: {{ .hostPort }}
            {{- end }}
            {{- if .hostIP }}
            hostIP: {{ .hostIP }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .env }}
        env:
          {{- range .env }}
          - name: {{ .name }}
            {{- if .value }}
            value: {{ .value }}
            {{- end }}
            {{- if .valueFrom }}
            valueFrom:
              {{- if .valueFrom.configMapKeyRef }}
              configMapKeyRef:
                name: {{ .valueFrom.configMapKeyRef.name }}
                key: {{ .valueFrom.configMapKeyRef.key }}
              {{- end }}
              {{- if .valueFrom.secretKeyRef }}
              secretKeyRef:
                name: {{ .valueFrom.secretKeyRef.name }}
                key: {{ .valueFrom.secretKeyRef.key }}
              {{- end }}
              {{- if .valueFrom.fieldRef }}
              fieldRef:
                fieldPath: {{ .valueFrom.fieldRef.fieldPath }}
              {{- end }}
              {{- if .valueFrom.resourceFieldRef }}
              resourceFieldRef:
                containerName: {{ .valueFrom.resourceFieldRef.containerName }}
                resource: {{ .valueFrom.resourceFieldRef.resource }}
                divisor: {{ .valueFrom.resourceFieldRef.divisor }}
              {{- end }}    
            {{- end }}  
          {{- end }}
        {{- end }}
        {{- if .envFrom }}
        envFrom:
          {{- range .envFrom }}
          - configMapRef:
              name: {{ .configMapRef.name }}
              optional: {{ .configMapRef.optional }}
            secretRef:
              name: {{ .secretRef.name }}
              optional: {{ .secretRef.optional }}
          {{- end }}
        {{- end }}
        {{- if .resources }}
        resources:
          {{- if .resources.limits }}
          limits:
            {{- range $k, $v := .resources.limits }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
          {{- if .resources.requests }}
          requests:
            {{- range $k, $v := .resources.requests }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
        {{- end }}  
        {{- if .livenessProbe }}
        livenessProbe:{{- "\n    " }}{{- include "probe" .livenessProbe | nindent 4 | trim }}
        {{- end }}
        {{- if .readinessProbe }}
        readinessProbe:{{- "\n    " }}{{- include "probe" .readinessProbe | nindent 4 | trim  }}
        {{- end }}
        {{- if .startupProbe }}
        startupProbe:{{- "\n    " }}{{- include "probe" .startupProbe | nindent 4 | trim  }}
        {{- end }}
        {{- if .lifecycle }}
        lifecycle:
          {{- if .lifecycle.postStart }}
          postStart:
            exec:
              command:
                {{- range .lifecycle.postStart.exec.command }}
                - {{ . }}
                {{- end }}
          {{- end }}
          {{- if .lifecycle.preStop }}
          preStop:
            exec:
              command:
                {{- range .lifecycle.preStop.exec.command }}
                - {{ . }}
                {{- end }}
          {{- end }}      
        {{- end }}
        {{- if .securityContext }}
        securityContext:
          {{- if .securityContext.runAsUser }}
          runAsUser: {{ .securityContext.runAsUser }}
          {{- end }}
          {{- if .securityContext.runAsGroup }}
          runAsGroup: {{ .securityContext.runAsGroup }}
          {{- end }}
          {{- if .securityContext.privileged }}
          privileged: {{ .securityContext.privileged }}
          {{- end }}
          {{- if .securityContext.readOnlyRootFilesystem }}
          readOnlyRootFilesystem: {{ .securityContext.readOnlyRootFilesystem }}
          {{- end }}
          {{- if .securityContext.allowPrivilegeEscalation }}
          allowPrivilegeEscalation: {{ .securityContext.allowPrivilegeEscalation }}
          {{- end }}
          {{- if .securityContext.runAsNonRoot }}
          runAsNonRoot: {{ .securityContext.runAsNonRoot }}
          {{- end }}
          {{- if .securityContext.capabilities }}
          capabilities:
            {{- if .securityContext.capabilities.add }}
            add:
              {{- range .securityContext.capabilities.add }}
              - {{ . }}
              {{- end }}
            {{- end }}
            {{- if .securityContext.capabilities.drop }}
            drop:
              {{- range .securityContext.capabilities.drop }}
              - {{ . }}
              {{- end }}
            {{- end }}  
          {{- end }}
          {{- if .securityContext.seccompProfile }}
          seccompProfile:
            type: {{ .securityContext.seccompProfile.type }}
            localhostProfile: {{ .securityContext.seccompProfile.localhostProfile }}
          {{- end }}
        {{- end }}
        {{- if .volumeMounts }}
        volumeMounts:
          {{- range .volumeMounts }}
          - name: {{ .name }}
            {{- if .mountPath }}
            mountPath: {{ .mountPath }}
            {{- end }}
            {{- if .readOnly }}
            readOnly: {{ .readOnly }}
            {{- end }}
            {{- if .subPath }}
            subPath: {{ .subPath }}
            {{- end }}
            {{- if .subPathExpr }}
            subPathExpr: {{ .subPathExpr }}
            {{- end }}
            {{- if .mountPropagation }}
            mountPropagation: {{ .mountPropagation }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .volumeDevices }}
        volumeDevices:
          {{- range .volumeDevices }}
          - name: {{ .name }}
            devicePath: {{ .devicePath }}
          {{- end }}
        {{- end }}
        {{- if .stdin }}
        stdin: {{ .stdin }}
        {{- end }}
        {{- if .stdinOnce }}
        stdinOnce: {{ .stdinOnce }}
        {{- end }}
        {{- if .tty }}
        tty: {{ .tty }}
        {{- end }}
        {{- if .imagePullPolicy }}
        imagePullPolicy: {{ .imagePullPolicy }}
        {{- end }}
        {{- if .terminationMessagePath }}
        terminationMessagePath: {{ .terminationMessagePath }}
        {{- end }}
        {{- if .terminationMessagePolicy }}
        terminationMessagePolicy: {{ .terminationMessagePolicy }}
        {{- end -}}  
      {{- end -}}
      {{- define "volume" -}}
      - name: {{ .name }}
        {{- if .configMap }}
        configMap:
          name: {{ .configMap.name }}
          {{- if .configMap.items }}
          items:
            {{- range .configMap.items }}
            - key: {{ .key }}
              path: {{ .path }}
              {{- if .mode }} mode: {{ .mode }}{{- end }}
            {{- end }}
          {{- end }}
          {{- if .configMap.defaultMode }}
          defaultMode: {{ .configMap.defaultMode }}
          {{- end }}
          {{- if .configMap.optional }}
          optional: {{ .configMap.optional }}
          {{- end }}
        {{- end }}
        {{- if .secret }}
        secret:
          secretName: {{ .secret.secretName }}
          {{- if .secret.items }}
          items:
            {{- range .secret.items }}
            - key: {{ .key }}
              path: {{ .path }}
              {{- if .mode }} mode: {{ .mode }}{{- end }}
            {{- end }}
          {{- end }}
          {{- if .secret.defaultMode }}
          defaultMode: {{ .secret.defaultMode }}
          {{- end }}
          {{- if .secret.optional }}
          optional: {{ .secret.optional }}
          {{- end }}
        {{- end }}
        {{- if .emptyDir }}
        emptyDir:
          {{- if .emptyDir.medium }}
          medium: {{ .emptyDir.medium }}
          {{- end }}
          {{- if .emptyDir.sizeLimit }}
          sizeLimit: {{ .emptyDir.sizeLimit }}
          {{- end }}
        {{- end }}
        {{- if .hostPath }}
        hostPath:
          path: {{ .hostPath.path }}
          {{- if .hostPath.type }}type: {{ .hostPath.type }}{{- end }}
        {{- end }}
        {{- if .persistentVolumeClaim }}
        persistentVolumeClaim:
          claimName: {{ .persistentVolumeClaim.claimName }}
          {{- if .persistentVolumeClaim.readOnly }}readOnly: {{ .persistentVolumeClaim.readOnly }}{{- end }}
        {{- end }}
        {{- if .projected }}
        projected:
          {{- if .projected.sources }}
          sources:
            {{- range .projected.sources }}
            - {{- if .secret }}
                secret:
                  name: {{ .secret.name }}
                  {{- if .secret.items }}
                  items:
                    {{- range .secret.items }}
                    - key: {{ .key }}
                      path: {{ .path }}
                      {{- if .mode }} mode: {{ .mode }}{{- end }}
                    {{- end }}
                  {{- end }}
                  {{- if .secret.optional }}optional: {{ .secret.optional }}{{- end }}
                {{- end }}
              {{- if .configMap }}
                configMap:
                  name: {{ .configMap.name }}
                  {{- if .configMap.items }}
                  items:
                    {{- range .configMap.items }}
                    - key: {{ .key }}
                      path: {{ .path }}
                      {{- if .mode }} mode: {{ .mode }}{{- end }}
                    {{- end }}
                  {{- end }}
                  {{- if .configMap.optional }}optional: {{ .configMap.optional }}{{- end }}
                {{- end }}
              {{- if .downwardAPI }}
                downwardAPI:
                  items:
                    {{- range .downwardAPI.items }}
                    - path: {{ .path }}
                      fieldRef:
                        fieldPath: {{ .fieldRef.fieldPath }}
                      {{- if .mode }}mode: {{ .mode }}{{- end }}
                    {{- end }}
                {{- end }}
              {{- if .serviceAccountToken }}
                serviceAccountToken:
                  audience: {{ .serviceAccountToken.audience }}
                  expirationSeconds: {{ .serviceAccountToken.expirationSeconds }}
                  path: {{ .serviceAccountToken.path }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if .projected.defaultMode }}defaultMode: {{ .projected.defaultMode }}{{- end }}
        {{- end }}
        {{- if .downwardAPI }}
        downwardAPI:
          items:
            {{- range .downwardAPI.items }}
            - path: {{ .path }}
              fieldRef:
                fieldPath: {{ .fieldRef.fieldPath }}
              {{- if .mode }}mode: {{ .mode }}{{- end }}
            {{- end }}
        {{- end }}
        {{- if .nfs }}
        nfs:
          server: {{ .nfs.server }}
          path: {{ .nfs.path }}
          {{- if .nfs.readOnly }}readOnly: {{ .nfs.readOnly }}{{- end }}
        {{- end }}
        {{- if .csi }}
        csi:
          driver: {{ .csi.driver }}
          {{- if .csi.volumeHandle }}volumeHandle: {{ .csi.volumeHandle }}{{- end }}
          {{- if .csi.fsType }}fsType: {{ .csi.fsType }}{{- end }}
          {{- if .csi.readOnly }}readOnly: {{ .csi.readOnly }}{{- end }}
          {{- if .csi.volumeAttributes }}
          volumeAttributes:
            {{- range $k, $v := .csi.volumeAttributes }}
            {{ $k }}: {{ $v }}
            {{- end }}
          {{- end }}
          {{- if .csi.nodePublishSecretRef }}
          nodePublishSecretRef:
            name: {{ .csi.nodePublishSecretRef.name }}
          {{- end }}
        {{- end }}
        {{- if .iscsi }}
        iscsi:
          targetPortal: {{ .iscsi.targetPortal }}
          iqn: {{ .iscsi.iqn }}
          lun: {{ .iscsi.lun }}
          {{- if .iscsi.fsType }}fsType: {{ .iscsi.fsType }}{{- end }}
          {{- if .iscsi.readOnly }}readOnly: {{ .iscsi.readOnly }}{{- end }}
          {{- if .iscsi.portals }}
          portals:
            {{- range .iscsi.portals }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .iscsi.chapAuthDiscovery }}chapAuthDiscovery: {{ .iscsi.chapAuthDiscovery }}{{- end }}
          {{- if .iscsi.chapAuthSession }}chapAuthSession: {{ .iscsi.chapAuthSession }}{{- end }}
          {{- if .iscsi.secretRef }}
          secretRef:
            name: {{ .iscsi.secretRef.name }}
          {{- end }}
          initiatorName: {{ .iscsi.initiatorName }}
        {{- end }}
        {{- if .azureDisk }}
        azureDisk:
          diskName: {{ .azureDisk.diskName }}
          diskURI: {{ .azureDisk.diskURI }}
          cachingMode: {{ .azureDisk.cachingMode }}
          fsType: {{ .azureDisk.fsType }}
          kind: {{ .azureDisk.kind }}
          readOnly: {{ .azureDisk.readOnly }}
        {{- end }}
        {{- if .azureFile }}
        azureFile:
          secretName: {{ .azureFile.secretName }}
          shareName: {{ .azureFile.shareName }}
          readOnly: {{ .azureFile.readOnly }}
        {{- end }}
        {{- if .gcePersistentDisk }}
        gcePersistentDisk:
          pdName: {{ .gcePersistentDisk.pdName }}
          fsType: {{ .gcePersistentDisk.fsType }}
          partition: {{ .gcePersistentDisk.partition }}
          readOnly: {{ .gcePersistentDisk.readOnly }}
        {{- end }}
        {{- if .fc }}
        fc:
          targetWWNs:
            {{- range .fc.targetWWNs }}
            - {{ . }}
            {{- end }}
          lun: {{ .fc.lun }}
          fsType: {{ .fc.fsType }}
          readOnly: {{ .fc.readOnly }}
        {{- end }}
        {{- if .flexVolume }}
        flexVolume:
          driver: {{ .flexVolume.driver }}
          fsType: {{ .flexVolume.fsType }}
          options:
            {{- range $k, $v := .flexVolume.options }}
            {{ $k }}: {{ $v }}
            {{- end }}
          readOnly: {{ .flexVolume.readOnly }}
          secretRef:
            name: {{ .flexVolume.secretRef.name }}
        {{- end }}
        {{- if .flocker }}
        flocker:
          datasetName: {{ .flocker.datasetName }}
          datasetUUID: {{ .flocker.datasetUUID }}
        {{- end }}
        {{- if .photonPersistentDisk }}
        photonPersistentDisk:
          pdID: {{ .photonPersistentDisk.pdID }}
          fsType: {{ .photonPersistentDisk.fsType }}
        {{- end }}
        {{- if .portworxVolume }}
        portworxVolume:
          volumeID: {{ .portworxVolume.volumeID }}
          fsType: {{ .portworxVolume.fsType }}
          readOnly: {{ .portworxVolume.readOnly }}
        {{- end }}
        {{- if .quobyte }}
        quobyte:
          registry: {{ .quobyte.registry }}
          volume: {{ .quobyte.volume }}
          readOnly: {{ .quobyte.readOnly }}
          user: {{ .quobyte.user }}
          group: {{ .quobyte.group }}
          tenant: {{ .quobyte.tenant }}
        {{- end }}
        {{- if .scaleIO }}
        scaleIO:
          gateway: {{ .scaleIO.gateway }}
          system: {{ .scaleIO.system }}
          secretRef:
            name: {{ .scaleIO.secretRef.name }}
          sslEnabled: {{ .scaleIO.sslEnabled }}
          protectionDomain: {{ .scaleIO.protectionDomain }}
          storagePool: {{ .scaleIO.storagePool }}
          storageMode: {{ .scaleIO.storageMode }}
          volumeName: {{ .scaleIO.volumeName }}
          fsType: {{ .scaleIO.fsType }}
          readOnly: {{ .scaleIO.readOnly }}
        {{- end }}
        {{- if .storageos }}
        storageos:
          volumeName: {{ .storageos.volumeName }}
          volumeNamespace: {{ .storageos.volumeNamespace }}
          fsType: {{ .storageos.fsType }}
          readOnly: {{ .storageos.readOnly }}
          secretRef:
            name: {{ .storageos.secretRef.name }}
        {{- end }}
        {{- if .vsphereVolume }}
        vsphereVolume:
          volumePath: {{ .vsphereVolume.volumePath }}
          fsType: {{ .vsphereVolume.fsType }}
        {{- end }}
      {{- end -}}
      {{- define "pod" -}}
        {{- if .serviceAccountName }}
        serviceAccountName: {{ .serviceAccountName }}
        {{- end }}
        {{- if .priorityClassName }}
        priorityClassName: {{ .priorityClassName }}
        {{- end }}
        {{- if .restartPolicy }}
        restartPolicy: {{ .restartPolicy }}
        {{- end }}
        {{- if .dnsPolicy }}
        dnsPolicy: {{ .dnsPolicy }}
        {{- end }}
        {{- if .hostNetwork }}
        hostNetwork: {{ .hostNetwork }}
        {{- end }}
        {{- if .hostPID }}
        hostPID: {{ .hostPID }}
        {{- end }}
        {{- if .hostIPC }}
        hostIPC: {{ .hostIPC }}
        {{- end }}
        {{- if .securityContext }}
        securityContext:
          {{- if .securityContext.runAsUser }}
          runAsUser: {{ .securityContext.runAsUser }}
          {{- end }}
          {{- if .securityContext.runAsGroup }}
          runAsGroup: {{ .securityContext.runAsGroup }}
          {{- end }}
          {{- if .securityContext.fsGroup }}
          fsGroup: {{ .securityContext.fsGroup }}
          {{- end }}
          {{- if .securityContext.runAsNonRoot }}
          runAsNonRoot: {{ .securityContext.runAsNonRoot }}
          {{- end }}
          {{- if .securityContext.supplementalGroups }}
          supplementalGroups:
            {{- range .securityContext.supplementalGroups }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .securityContext.seLinuxOptions }}
          seLinuxOptions:
            {{- if .securityContext.seLinuxOptions.level }}
            level: {{ .securityContext.seLinuxOptions.level }}
            {{- end }}
            {{- if .securityContext.seLinuxOptions.role }}
            role: {{ .securityContext.seLinuxOptions.role }}
            {{- end }}
            {{- if .securityContext.seLinuxOptions.type }}
            type: {{ .securityContext.seLinuxOptions.type }}
            {{- end }}
            {{- if .securityContext.seLinuxOptions.user }}
            user: {{ .securityContext.seLinuxOptions.user }}
            {{- end }}
          {{- end }}
          {{- if .securityContext.sysctls }}
          sysctls:
            {{- range .securityContext.sysctls }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .initContainers }}
        initContainers:
          {{- range .initContainers }}
          - {{ include "container" . | indent 4 | trim }}
          {{- end }}
        {{- end }}
        {{- if .containers }}
        containers:
          {{- range .containers }}
          - {{ include "container" . | indent 4 | trim }}
          {{- end }}
        {{- end }}
        {{- if .volumes }}
        volumes:
          {{- range .volumes }}
          {{ include "volume" . | indent 4 | trim }}
          {{- end }}
        {{- end }}
        {{- if .affinity }}
          # expand all fields for affinity (nodeAffinity, podAffinity, podAntiAffinity)
          # ... (add nodeAffinity, podAffinity, podAntiAffinity, preferred fields)
        {{- end }}
        {{- if .nodeSelector }}
        nodeSelector:
          {{- range $k, $v := .nodeSelector }}
          {{ $k }}: {{ $v }}
          {{- end }}
        {{- end }}
        {{- if .tolerations }}
        tolerations:
          {{- range .tolerations }}
          - key: {{ .key }}
            {{- if .operator }}
            operator: {{ .operator }}
            {{- end }}
            {{- if .value }}
            value: {{ .value }}
            {{- end }}
            {{- if .effect }}
            effect: {{ .effect }}
            {{- end }}
            {{- if .tolerationSeconds }}
            tolerationSeconds: {{ .tolerationSeconds }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .imagePullSecrets }}
        imagePullSecrets:
          {{- range .imagePullSecrets }}
          - name: {{ .name }}
          {{- end }}
        {{- end }}
        {{- if .hostAliases }}
        hostAliases:
          {{- range .hostAliases }}
          - ip: {{ .ip }}
            hostnames:
              {{- range .hostnames }}
              - {{ . }}
              {{- end }}
          {{- end }}
        {{- end }}
        {{- if .readinessGates  }}
        readinessGates:
          {{- range .readinessGates }}
          - conditionType: {{ .conditionType }}
          {{- end }}
        {{- end }}
        {{- if .schedulerName }}
        schedulerName: {{ .schedulerName }}
        {{- end }}
        {{- if .subdomain }}
        subdomain: {{ .subdomain }}
        {{- end }}
        {{- if .shareProcessNamespace }}
        shareProcessNamespace: {{ .shareProcessNamespace }}
        {{- end }}
        {{- if .terminationGracePeriodSeconds }}
        terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
        {{- end }}
        {{- if .automountServiceAccountToken }}
        automountServiceAccountToken: {{ .automountServiceAccountToken }}
        {{- end }}
        {{- if .setHostnameAsFQDN }}
        setHostnameAsFQDN: {{ .setHostnameAsFQDN }}
        {{- end }}
        {{- if .dnsConfig }}
        dnsConfig:
          {{- if .dnsConfig.nameservers }}
          nameservers:
            {{- range .dnsConfig.nameservers }}
            - {{ . }}
            {{- end }}
          {{- end }}
          {{- if .dnsConfig.options }}  
          options:
            {{- range .dnsConfig.options }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          {{- end }}
          {{- if .dnsConfig.searches }}
          searches:
            {{- range .dnsConfig.searches }}
            - {{ . }}
            {{- end }}
          {{- end }}  
        {{- end -}}
      {{- end -}}

  - path: .helmignore
    template: false

    content: |
      *.tgz
      .DS_Store
      .idea/
      *.swp
      __pycache__/
      .ipynb_checkpoints/

valuesSchema:
  apiVersion:
    type: string
    description: Kubernetes API version for the SeldonDeployment resource (e.g., machinelearning.seldon.io/v1)
    required: true
    default: mlops.seldon.io/v1alpha1
  chart.name:
    type: string
    description: Name of the Helm chart
    required: true
  chart.version:
    type: string
    description: Version of the Helm chart
    required: true
  chart.description:
    type: string
    description: Short description of the chart's purpose
    required: true
  namespace:
    type: string
    description: Kubernetes namespace to deploy the resources in
    required: true
  subjectArea:
    type: string
    description: A tag to classify a subject area of the target chart.
    required: true
    default: online-model-inference
  sourceMetafileName:
    type: string
    description: Source metafile name
    required: true
    default: no_data
  sourceMetafileRepo:
    type: string
    description: Source metafile name
    required: true
    default: no_data
  sourceMetafileBranch:
    type: string
    description: Source metafile name
    required: true
    default: no_data
  metadata.labels:
    type: map
    description: Key-value pairs used to categorize and select Kubernetes objects
    required: false
  metadata.annotations:
    type: list
    description: Annotations applied to the SeldonDeployment additional metadata for tooling, policies, and configuration
    required: false
  models:
    type: list
    description: List of Seldon Core V2 Model objects to deploy.
    required: true
  models.name:
    type: string
    description: Name of the Model resource (metadata.name).
    required: true
  models.labels:
    type: map
    description: Additional labels to set on the Model resource (metadata.labels).
    required: false
  models.annotations:
    type: map
    description: Additional annotations to set on the Model resource (metadata.annotations).
    required: false
  models.storageUri:
    type: string
    description: Storage URI for the model artifact (spec.storageUri). This can be a GCS/S3 bucket or a path supported by the storage initializer.
    required: true
  models.artifactVersion:
    type: integer
    description: Optional artifact version number to use with the storageUri.
    required: false
  models.modelType:
    type: string
    description: Type of model to deploy. Supported values include - sklearn, xgboost, mlflow, triton, pytorch, tensorflow, huggingface, openllm, spacy, custom, etc.
    required: false
  models.schemaUri:
    type: string
    description: Optional URI for the model’s schema.
    required: false
  models.secretName:
    type: string
    description: Name of the Kubernetes Secret containing credentials for accessing the storageUri.
    required: false
  models.requirements:
    type: list
    description: List of extra requirements for this model to be loaded on a compatible server
    required: false
  models.memory:
    type: string
    description: Requested memory for the model server (e.g., "256Mi", "1Gi").
    required: false
  models.replicas:
    type: integer
    description: Number of replicas - default 1
    required: false
  models.minReplicas:
    type: integer
    description: Min number of replicas - default equal to 0
    required: false
  models.maxReplicas:
    type: integer
    description: Max number of replicas - default equal to 0
    required: false
  models.server:
    type: string
    description: Name of the Server resource to use for this model. This must match the metadata.name of a Server object.
    required: false
  models.preloaded:
    type: boolean
    description: Model already loaded on a server. Don't schedule.
    required: false
  models.dedicated:
    type: boolean
    description: If true, launches a dedicated model server (rather than shared with others).
    required: false
  models.logger.percent:
    type: integer
    description: Percentage of payloads to log
    required: false
  models.explainer.type:
    type: string
    description: type of explainer - AnchorTabular, AnchorImages, AnchorText, etc.
    required: false
  models.explainer.modelRef:
    type: string
    description: Reference to another Model for the explainer to use.
    required: false
  models.explainer.pipelineRef:
    type: string
    description: Reference to a Pipeline for the explainer to use.
    required: false
  models.parameters:
    type: list
    description: List of custom parameters to pass to the model server (name/value pairs).
    required: false
  models.parameters.name:
    type: string
    description: Name of the parameter.
    required: true
  models.parameters.value:
    type: string
    description: Value of the parameter (string format).
    required: true
  models.llm.modelRef:
    type: string
    description: Reference to another Model resource for LLM chaining.
    required: false
  models.llm.pipelineRef:
    type: string
    description: Reference to a Pipeline resource for LLM chaining.
    required: false
  pipelines:
    type: list
    description: List of Seldon Core V2 Pipeline objects to deploy.
    required: true
  pipelines.name:
    type: string
    description: Name of the Pipeline resource (metadata.name).
    required: true
  pipelines.labels:
    type: map
    description: Additional labels to set on the Pipeline resource (metadata.labels).
    required: false
  pipelines.annotations:
    type: map
    description: Additional annotations to set on the Pipeline resource (metadata.annotations).
    required: false
  pipelines.input.externalInputs:
    type: list
    description: Previous external pipeline steps to receive data from
    required: false
  pipelines.input.externalTriggers:
    type: list
    description: Triggers required to activate inputs
    required: false
  pipelines.input.joinWindowMs:
    type: integer
    description: msecs to wait for messages from multiple inputs to arrive before joining the inputs
    required: false
  pipelines.input.joinType:
    type: string
    description: How to join the external inputs. Possible values -  "inner", "outer", "any".
    required: false
  pipelines.input.triggersJoinType:
    type: string
    description: How to join the triggers. Possible values - "inner", "outer", "any".
    required: false
  pipelines.input.tensorMap:
    type: map
    description: Mapping of tensor names for the pipeline input (key is input name, value is tensor name).
    required: false
  pipelines.steps:
    type: list
    description: Ordered list of steps (nodes) in the pipeline graph.
    required: true
  pipelines.steps.name:
    type: string
    description: Name of the pipeline step.
    required: true
  pipelines.steps.inputs:
    type: list
    description: List of names of input steps or external inputs for this step.
    required: false
  pipelines.steps.joinWindowMs:
    type: integer
    description: Time window (in milliseconds) for joining inputs for this step.
    required: false
  pipelines.steps.tensorMap:
    type: map
    description: Mapping of tensor names for this pipeline step (key is input name, value is tensor name).
    required: false
  pipelines.steps.triggers:
    type: list
    description: List of triggers for this step (names of pipeline steps, external triggers, or models).
    required: false
  pipelines.steps.inputsJoinType:
    type: string
    description: How to join the step’s inputs. Possible values- "inner", "outer", "any".
    required: false
  pipelines.steps.triggersJoinType:
    type: string
    description: How to join the triggers for this step. Possible values- "inner", "outer", "any".
    required: false
  pipelines.steps.batch.size:
    type: integer
    description: Batch size for this step (number of items per batch).
    required: false
  pipelines.steps.batch.windowMs:
    type: integer
    description: Batch window for this step (in milliseconds).
    required: false
  pipelines.steps.batch.rolling:
    type: boolean
    description: Whether batching should use a rolling window for this step.
    required: false
  pipelines.output.steps:
    type: list
    description: List of names of steps to use as the pipeline outputs.
    required: false
  pipelines.output.joinWindowMs:
    type: integer
    description: Time window (in milliseconds) for joining output steps.
    required: false
  pipelines.output.stepsJoin:
    type: string
    description: How to join the output steps. Possible values- "inner", "outer", "any".
    required: false
  pipelines.output.tensorMap:
    type: map
    description: Mapping of tensor names for the pipeline output (key is step name, value is tensor name).
    required: false
  pipelines.dataflow.cleanTopicsOnDelete:
    type: boolean
    description: 
    required: false
  pipelines.allowCycles:
    type: boolean
    description: 
    required: false
  pipelines.maxStepRevisits:
    type: integer
    description: 
    required: false
